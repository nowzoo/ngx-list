var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/INgxListBoostrapOptions.html",[0,0.682,1,0.906]],["body/interfaces/INgxListBoostrapOptions.html",[0,0.699,1,1.402,2,1.401,3,0.699,4,0.601,5,0.601,6,0.277,7,1.892,8,0.427,9,1.244,10,1.376,11,3.181,12,3.181,13,3.181,14,3.181,15,3.181,16,3.181,17,3.181,18,3.181,19,3.181,20,3.181,21,3.181,22,3.181,23,3.181,24,3.181,25,3.181,26,3.181,27,3.181,28,1.388,29,0.815,30,0.054,31,1.402,32,0.601,33,2.857,34,1.065,35,0.907,36,1.877,37,1.065,38,1.065,39,2.257,40,2.257,41,1.22,42,0.937,43,1.065,44,1.22,45,1.892,46,1.842,47,1.892,48,1.892,49,1.892,50,1.892,51,1.892,52,1.892,53,1.892,54,0.929,55,1.065,56,1.892,57,1.892,58,1.619,59,1.22,60,1.22,61,0.601,62,1.892,63,1.244,64,1.426,65,1.426,66,1.892,67,0.027,68,0.037,69,0.027]],["title/interfaces/INgxListInit.html",[0,0.682,70,1.367]],["body/interfaces/INgxListInit.html",[0,0.834,2,1.184,3,0.591,4,0.508,5,0.508,6,0.234,8,0.361,9,1.108,10,1.333,28,1.227,29,0.799,30,0.055,31,1.722,32,0.508,35,0.987,42,1.15,46,1.933,54,1.395,55,1.27,59,1.687,60,1.687,61,1.068,63,1.108,64,0.9,65,1.27,67,0.023,68,0.033,69,0.023,70,1.184,71,1.031,72,2.14,73,2.219,74,2.564,75,2.219,76,2.105,77,3.12,78,2.661,79,1.931,80,2.793,81,1.472,82,1.687,83,2.238,84,1.799,85,1.937,86,1.931,87,1.931,88,1.832,89,2.238,90,1.937,91,2.169,92,1.28,93,1.455,94,1.284,95,1.937,96,1.599,97,1.687,98,2.257,99,1.931,100,2.238,101,2.105,102,0.785,103,1.184,104,0.591,105,0.609,106,1.184,107,1.031,108,1.031,109,1.184,110,0.9,111,1.184,112,1.031,113,1.27,114,1.599,115,2.219,116,1.368,117,1.368,118,1.031,119,1.184,120,0.683,121,1.932,122,1.184,123,1.184,124,1.184,125,1.184,126,2.257,127,1.455,128,1.455,129,1.368,130,1.931,131,1.599,132,0.9,133,1.455,134,1.455,135,1.368,136,1.455,137,0.683,138,1.368,139,1.368,140,1.368,141,0.591,142,1.599,143,1.184,144,1.184,145,1.184,146,1.931,147,1.599,148,1.184,149,1.599,150,1.368,151,1.184]],["title/interfaces/INgxListParams.html",[0,0.682,136,1.19]],["body/interfaces/INgxListParams.html",[0,0.88,2,1.278,3,0.638,4,0.548,5,0.548,6,0.252,8,0.389,9,1.168,10,1.139,28,1.207,29,0.778,30,0.055,31,1.749,32,0.548,35,1.011,42,1.178,46,1.958,54,1.564,55,0.971,59,1.757,60,1.757,61,1.072,63,1.168,64,0.971,65,1.339,67,0.025,68,0.035,69,0.025,71,1.112,72,2.054,73,2.282,74,2.036,75,2.282,76,1.278,78,2.513,79,1.476,80,2.513,81,1.339,82,1.757,83,1.476,84,1.792,85,1.762,86,1.476,87,1.476,88,1.757,89,2.331,90,2.018,91,2.177,92,1.163,93,1.112,94,1.337,95,2.018,96,1.339,97,1.534,98,1.725,99,1.476,100,2.036,101,1.278,102,0.847,103,1.278,104,0.638,105,0.642,106,1.278,107,1.112,108,1.112,109,1.278,110,0.971,111,1.278,112,1.112,113,1.339,114,1.725,115,2.282,116,1.476,117,1.476,118,1.112,119,1.278,120,0.737,121,1.987,122,1.278,123,1.278,124,1.278,125,1.278,126,2.38,127,1.534,128,1.534,129,1.476,130,2.036,131,1.725,132,0.971,133,1.534,134,1.534,135,1.476,136,1.757,137,0.737,138,1.476,139,1.476,140,1.476,141,0.638,142,1.725,143,1.278,144,1.278,145,1.278,146,2.036,147,1.725,148,1.278,149,1.725,150,1.476,151,1.278]],["title/interfaces/INgxListResult.html",[0,0.682,141,0.682]],["body/interfaces/INgxListResult.html",[0,0.876,2,1.27,3,0.634,4,0.545,5,0.545,6,0.251,8,0.387,9,1.164,10,1.137,28,1.205,29,0.735,30,0.055,31,1.773,32,0.545,35,1.01,42,1.246,46,1.869,54,1.561,55,0.965,59,1.528,60,1.528,61,0.976,63,1.164,64,0.965,65,1.334,67,0.025,68,0.034,69,0.025,71,1.106,72,2.102,73,1.755,74,2.028,75,1.755,76,1.27,79,1.468,80,2.507,81,1.334,82,1.528,83,1.468,84,1.789,85,1.755,86,1.468,87,1.468,88,1.751,89,2.028,90,1.755,91,2.272,92,1.16,93,1.106,94,1.164,95,1.755,96,1.334,97,1.528,98,1.715,99,1.468,100,2.028,101,1.27,102,0.842,103,1.27,104,0.634,105,0.639,106,1.27,107,1.106,108,1.106,109,1.27,110,0.965,111,1.27,112,1.106,113,1.334,114,1.715,115,2.277,116,1.468,117,1.468,118,1.106,119,1.27,120,0.733,121,1.983,122,1.27,123,1.27,124,1.27,125,1.27,126,2.37,127,1.528,128,1.528,129,1.468,130,2.028,131,1.715,132,0.965,133,1.528,134,1.528,135,1.468,136,1.751,137,0.733,138,1.468,139,2.028,140,2.028,141,0.876,142,2.37,143,1.755,144,1.755,145,2.17,146,2.507,147,2.37,148,2.17,149,2.37,150,2.028,151,2.17,152,2.549]],["title/classes/NgxList.html",[153,0.682,154,1.039]],["body/classes/NgxList.html",[3,0.432,4,0.836,5,0.371,6,0.494,8,0.263,10,0.973,28,1.103,29,0.69,30,0.055,31,1.719,32,0.836,35,0.371,36,2.352,42,1.174,46,1.937,54,1.582,55,0.657,61,0.991,63,0.879,64,1.008,65,1.008,67,0.043,68,0.026,69,0.038,70,1.808,72,1.574,73,1.808,75,2.486,78,2.089,81,1.374,82,1.155,84,1.627,89,2.089,90,1.808,91,2.207,93,1.574,94,1.502,95,1.808,96,1.008,101,2.057,102,0.573,104,1.23,105,0.749,110,0.657,113,1.008,120,1.186,127,1.155,128,1.155,129,1.533,133,1.791,134,1.155,136,1.404,137,1.124,141,1.103,143,1.326,144,1.613,145,2.142,148,1.95,150,2.089,151,1.95,153,0.432,154,1.008,155,1.168,156,1.394,157,1.155,158,3.628,159,2.661,160,2.661,161,2.661,162,2.661,163,1.533,164,0.865,165,2.661,166,2.486,167,1.736,168,2.136,169,1.698,170,0.753,171,1.736,172,2.661,173,2.661,174,2.136,175,2.136,176,2.136,177,2.661,178,2.661,179,1.326,180,1.791,181,2.312,182,2.136,183,1.736,184,3.559,185,2.136,186,1.736,187,2.136,188,1.736,189,2.661,190,2.661,191,2.136,192,2.136,193,1.736,194,1.533,195,1.791,196,2.136,197,2.661,198,1.736,199,1.736,200,2.913,201,1.736,202,1.736,203,1.736,204,1.736,205,2.136,206,1.736,207,1.736,208,1.736,209,1.736,210,1.736,211,1.736,212,1.736,213,1.736,214,1.736,215,1.736,216,1.736,217,1.736,218,1.791,219,3.236,220,2.661,221,1.736,222,1.394,223,1.394,224,1.394,225,1.394,226,0.865,227,0.865,228,2.136,229,2.21,230,1.736,231,1.736,232,1.736,233,1.698,234,1.736,235,1.736,236,1.736,237,1.736,238,1.736,239,1.736,240,1.736,241,1.736,242,3.236,243,1.736,244,1.736,245,1.736,246,2.136,247,2.013,248,1.736,249,1.736,250,1.736,251,1.736,252,1.736,253,1.736,254,1.736,255,2.089,256,1.736,257,1.736,258,1.736,259,1.736,260,1.736,261,1.736,262,1.736,263,1.736,264,3.628,265,3.236,266,3.628,267,1.736,268,1.736,269,1.736,270,3.236,271,1.394,272,2.136,273,1.736,274,3.236,275,1.736,276,1.736,277,1.736,278,1.736,279,1.736,280,1.736,281,1.736,282,1.736,283,1.736,284,1.736,285,1.736,286,1.736,287,1.736,288,1.736,289,1.736,290,1.736,291,1.736,292,1.736,293,1.168,294,1.736]],["title/components/NgxListBoostrapPaginationComponent.html",[295,0.906,296,0.906]],["body/components/NgxListBoostrapPaginationComponent.html",[1,1.569,3,0.591,4,0.508,5,0.508,6,0.516,8,0.361,9,1.108,10,1.05,28,0.834,29,0.748,30,0.055,31,1.395,32,1.015,34,0.9,35,0.508,36,1.184,37,0.9,38,1.27,41,1.455,42,1.227,43,1.27,44,1.455,61,0.508,67,0.033,68,0.033,69,0.023,92,1.365,94,1.284,102,0.785,104,0.967,105,0.862,120,0.964,137,1.214,141,1.05,153,0.591,154,1.472,157,1.455,163,1.931,164,1.672,166,2.598,169,1.455,170,1.832,179,2.105,181,1.937,194,2.432,226,1.184,229,1.672,233,1.832,247,1.031,255,1.368,295,1.284,296,1.395,297,1.599,298,1.368,299,1.599,300,1.368,301,1.908,302,1.931,303,2.238,304,2.238,305,1.599,306,2.564,307,2.219,308,1.686,309,2.692,310,2.257,311,3.887,312,1.931,313,3.354,314,2.616,315,3.887,316,3.887,317,4.223,318,3.887,319,2.432,320,2.257,321,1.931,322,2.616,323,3.12,324,2.616,325,2.616,326,1.599,327,3.354,328,2.257,329,2.257,330,2.257,331,2.376,332,3.39,333,2.692,334,2.692,335,2.376,336,2.376,337,2.376,338,2.376,339,2.376,340,2.376,341,2.257,342,2.376,343,3.12,344,2.376,345,2.376,346,2.376,347,2.376,348,1.599,349,2.376,350,2.661,351,1.599,352,1.368,353,2.238,354,1.599,355,1.599,356,1.599,357,1.599,358,1.908,359,2.376,360,1.908,361,2.257,362,1.908,363,2.376,364,1.908,365,1.599,366,1.599,367,1.599,368,1.599,369,1.599,370,1.599,371,1.599,372,3.39,373,3.354,374,2.376,375,2.376,376,2.376,377,1.908,378,1.908,379,1.184,380,2.257,381,1.599,382,2.841,383,1.599,384,1.599,385,0.785,386,1.599,387,0.785,388,1.599,389,1.599]],["title/components/NgxListBoostrapRppComponent.html",[295,0.906,385,0.906]],["body/components/NgxListBoostrapRppComponent.html",[1,1.617,3,0.659,4,0.566,5,0.566,6,0.508,8,0.402,9,1.195,10,1.101,28,0.9,29,0.743,30,0.055,32,1.046,34,1.003,35,0.566,37,1.003,38,1.37,41,1.57,42,1.257,43,1.37,44,1.57,61,0.566,67,0.035,68,0.035,69,0.026,92,1.04,102,0.875,104,1.025,105,0.656,132,1.003,137,1.272,141,1.101,153,0.659,154,1.56,157,1.57,163,2.083,164,1.803,166,2.547,169,1.57,170,1.92,179,2.206,181,2.053,226,1.321,229,1.803,233,1.92,247,1.15,255,1.526,295,1.361,296,0.875,297,1.783,298,1.526,299,1.783,300,1.526,302,2.083,303,2.372,304,2.372,305,1.783,306,2.668,307,2.309,308,1.754,310,2.434,312,2.083,314,2.771,319,2.548,320,2.434,321,2.083,322,2.771,324,2.771,325,2.771,326,1.783,328,2.434,329,2.434,330,2.434,341,2.434,343,3.306,348,1.783,350,2.668,351,1.783,352,1.526,353,2.372,354,1.783,355,1.783,356,1.783,357,1.783,358,2.127,360,2.127,361,2.434,362,2.127,364,2.127,365,1.783,366,1.783,367,1.783,368,1.783,369,1.783,370,1.783,371,1.783,372,2.904,379,1.321,380,2.434,381,1.783,382,2.978,383,1.783,384,1.783,385,1.462,386,1.783,387,0.875,388,1.783,389,1.783,390,2.127,391,2.904,392,4.119,393,3.617,394,3.617,395,2.65,396,2.65,397,2.65,398,2.65,399,2.65,400,2.65,401,2.65,402,2.65,403,2.65,404,2.65,405,2.65,406,2.65]],["title/modules/NgxListBootstrapModule.html",[407,1.58,408,1.367]],["body/modules/NgxListBootstrapModule.html",[3,0.871,4,0.748,5,0.748,6,0.345,30,0.055,32,1.102,34,1.326,35,0.748,67,0.034,68,0.042,69,0.034,153,0.871,296,1.789,308,1.326,352,2.016,379,1.745,385,1.789,387,1.789,407,2.016,408,2.709,409,2.356,410,2.016,411,3.784,412,2.356,413,3.171,414,2.811,415,2.811,416,2.811,417,3.482,418,2.811,419,2.356,420,3.502,421,3.482,422,4.338,423,2.811,424,4.338,425,3.502,426,3.502,427,3.502,428,2.811]],["title/components/NgxListBootstrapSortComponent.html",[295,0.906,387,0.906]],["body/components/NgxListBootstrapSortComponent.html",[1,1.588,3,0.616,4,0.529,5,0.529,6,0.51,8,0.376,9,1.141,10,1.07,28,0.859,29,0.686,30,0.055,32,1.047,34,0.938,35,0.529,37,0.938,38,0.938,41,1.498,42,1.239,43,1.308,44,1.498,61,0.919,67,0.034,68,0.034,69,0.024,84,1.505,92,1.236,102,0.818,104,1.07,105,0.78,132,1.82,133,2.032,137,1.236,141,1.07,153,0.616,154,1.505,157,1.498,163,1.989,164,1.721,166,2.563,169,1.498,170,1.866,179,2.143,181,2.143,226,1.235,229,1.721,233,1.498,247,1.075,255,1.427,295,1.313,296,0.818,297,1.667,298,1.427,299,1.667,300,1.427,302,1.989,303,2.289,304,2.289,305,1.667,306,2.604,307,2.334,308,1.773,310,2.324,312,1.989,319,2.477,320,2.324,321,1.989,325,2.675,326,1.667,328,2.324,341,2.324,348,1.667,350,2.604,351,1.667,353,2.289,354,1.667,355,1.667,356,1.667,357,1.667,361,1.667,365,1.667,366,1.667,367,1.667,368,1.667,369,1.667,370,1.667,371,1.667,377,1.989,378,1.989,379,1.235,380,2.324,381,1.667,382,2.894,383,1.667,384,1.667,385,0.818,386,1.667,387,1.421,388,1.667,389,1.667,429,1.989,430,3.976,431,3.453,432,3.191,433,3.452,434,3.191,435,3.453,436,2.477,437,2.477,438,2.477,439,2.477,440,2.477,441,2.477,442,2.477,443,2.477,444,2.477,445,2.477,446,2.477,447,3.976,448,3.976,449,2.477,450,3.453,451,2.477,452,2.477,453,3.453,454,3.453,455,2.477,456,2.477,457,2.477,458,2.477,459,2.477,460,1.989,461,2.477,462,1.989,463,3.453,464,2.477,465,2.477,466,3.453,467,2.477,468,2.477]],["title/classes/NgxListFnFactory.html",[153,0.682,227,1.367]],["body/classes/NgxListFnFactory.html",[3,0.352,4,0.302,5,0.302,6,0.419,8,0.214,10,1.246,28,1.328,29,0.751,30,0.055,31,0.467,32,0.849,35,0.302,36,2.533,54,0.748,61,0.809,63,1.071,67,0.014,68,0.032,69,0.014,72,0.983,76,1.129,78,2.62,81,1.565,82,1.642,84,1.795,88,1.642,90,1.129,91,1.849,92,1.307,93,1.642,94,1.172,96,1.433,97,1.793,104,1.088,105,0.898,107,0.983,108,1.539,110,1.433,112,1.938,113,1.433,118,0.983,120,0.406,121,1.406,127,1.406,132,1.433,134,2.079,137,1.188,153,0.352,155,0.951,157,0.983,166,2.059,169,1.793,170,1.938,180,1.524,194,1.632,195,2.181,218,1.524,224,1.134,225,1.134,226,0.704,227,1.129,228,2.848,233,1.725,247,2.231,293,1.524,469,3.422,470,1.134,471,4.062,472,2.265,473,3.241,474,2.834,475,2.602,476,2.834,477,2.834,478,2.265,479,1.818,480,1.413,481,2.265,482,2.602,483,2.265,484,2.265,485,3.652,486,1.413,487,3.241,488,1.818,489,1.818,490,3.192,491,3.422,492,1.413,493,1.413,494,3.997,495,3.972,496,1.413,497,3.785,498,2.834,499,1.413,500,2.265,501,2.265,502,1.524,503,2.602,504,1.818,505,3.709,506,1.413,507,1.413,508,1.413,509,2.834,510,1.413,511,1.818,512,1.413,513,2.602,514,2.265,515,3.422,516,3.241,517,1.818,518,2.265,519,1.818,520,1.818,521,1.818,522,1.818,523,2.602,524,1.818,525,1.818,526,2.265,527,1.818,528,1.413,529,1.818,530,3.039,531,1.818,532,1.818,533,2.265,534,1.818,535,1.818,536,1.134,537,1.134,538,1.413,539,1.413,540,1.413,541,1.413,542,1.413,543,1.413,544,1.413,545,3.785,546,1.413,547,1.413,548,2.834,549,2.265,550,2.834,551,1.413,552,1.413,553,1.818,554,1.413,555,1.413,556,1.413,557,1.413,558,1.413,559,1.413,560,1.413,561,1.413,562,1.413,563,2.834,564,1.413,565,1.413,566,2.265,567,2.265,568,2.834,569,2.265,570,1.413,571,1.413,572,1.413,573,1.413,574,1.413,575,1.413,576,1.413,577,1.413,578,1.413,579,1.413,580,1.413,581,3.241,582,1.413,583,1.413,584,1.413,585,1.413,586,1.413,587,1.413,588,1.413,589,1.413,590,1.413,591,1.413,592,1.413,593,1.413,594,2.265,595,1.413,596,2.275,597,2.265,598,1.818,599,1.413,600,1.413,601,1.413,602,1.413,603,1.413,604,1.413,605,1.413,606,1.413,607,3.785,608,1.413,609,1.413,610,1.413,611,1.413,612,1.413,613,1.413]],["title/coverage.html",[614,2.973]],["body/coverage.html",[0,1.249,1,1.223,5,0.791,6,0.535,7,3.25,29,0.562,30,0.053,37,1.401,38,1.401,44,1.606,58,2.131,67,0.036,68,0.044,69,0.036,70,1.845,71,2.096,94,1.727,136,1.606,141,0.921,153,1.116,154,1.401,156,2.971,227,1.845,295,1.595,296,1.223,301,2.971,385,1.223,387,1.223,390,2.971,429,2.971,469,2.971,470,2.971,614,2.971,615,2.971,616,2.971,617,3.701,618,3.701,619,4.488,620,4.488,621,3.701,622,3.701,623,3.701,624,3.701,625,3.701,626,3.701,627,3.701,628,2.971,629,3.701,630,3.701,631,3.701,632,3.701,633,3.701,634,2.971]],["title/dependencies.html",[410,1.894,635,2.311]],["body/dependencies.html",[30,0.054,34,1.476,67,0.038,68,0.045,69,0.038,102,1.287,307,1.942,308,1.476,352,2.244,410,2.244,423,3.128,636,3.897,637,5.387,638,3.897,639,4.628,640,3.716,641,3.897,642,3.897,643,3.897,644,3.897,645,3.897,646,3.897,647,3.897,648,4.628,649,3.128,650,3.897,651,3.897,652,3.897,653,3.897,654,3.897,655,3.897,656,3.897,657,3.897,658,3.897]],["title/miscellaneous/enumerations.html",[659,1.003,660,2.64]],["body/miscellaneous/enumerations.html",[6,0.41,8,0.633,30,0.05,67,0.041,68,0.047,69,0.041,71,1.809,81,1.578,105,0.756,115,2.078,116,2.401,118,2.089,119,2.078,120,1.198,122,2.078,123,2.078,124,2.078,125,2.078,659,1.809,660,3.347,661,3.347,662,3.347]],["title/index.html",[8,0.351,663,1.855,664,1.855]],["body/index.html",[0,0.669,1,1.148,4,0.222,6,0.225,9,1.207,10,1.272,11,0.7,12,1.184,13,0.7,14,1.184,15,0.7,16,1.184,17,0.7,18,1.184,19,0.7,20,0.7,21,0.7,22,1.184,23,1.184,24,0.7,25,1.184,26,0.7,27,0.7,28,1.268,29,0.597,30,0.054,31,1.576,32,0.905,33,0.7,34,0.394,35,0.488,36,1.626,37,1.383,38,1.236,41,1.304,42,1.275,43,1.533,45,0.7,46,1.793,47,0.7,48,0.7,49,0.7,50,0.7,51,0.7,52,0.7,53,0.7,54,1.3,55,0.866,56,0.7,57,0.7,58,0.599,59,0.992,60,0.451,61,1.059,62,0.7,63,1.338,64,0.866,65,1.383,66,0.7,67,0.042,68,0.017,69,0.01,70,0.877,72,1.416,73,1.34,74,2.001,75,1.821,76,0.518,77,2.619,79,1.013,80,1.548,81,1.662,82,1.801,83,2.39,84,1.841,85,2.298,86,2.191,87,0.599,88,1.416,91,2.097,92,1.452,93,1.839,94,1.148,95,0.877,96,1.236,97,1.801,99,0.599,100,1.548,101,1.626,103,0.877,104,0.438,105,0.769,106,0.518,107,0.992,108,1.416,109,1.139,110,1.018,111,1.498,112,1.416,113,1.383,115,0.518,117,1.013,118,0.992,119,0.518,120,0.657,121,2.054,122,0.518,123,0.518,124,0.518,125,0.518,127,0.451,128,0.451,130,0.599,132,1.138,133,1.801,134,1.585,135,1.013,137,0.299,138,0.599,139,0.599,140,0.599,141,0.669,143,1.139,144,0.877,145,1.626,146,1.013,148,1.139,151,1.139,153,0.909,154,1.662,157,0.763,164,0.877,168,2.413,169,0.763,170,1.957,174,0.835,175,1.412,176,0.835,179,0.518,180,1.184,181,1.34,182,0.835,184,3.16,185,0.835,187,0.835,191,0.835,192,0.835,194,1.879,195,2.023,196,1.835,200,1.412,205,1.835,218,1.538,222,1.412,223,0.835,227,0.518,229,0.518,233,1.508,246,0.835,247,0.763,272,0.835,293,1.809,295,1.45,296,0.755,298,0.599,300,0.599,302,0.599,303,1.013,304,1.013,306,1.548,307,1.732,308,1.662,309,1.835,312,0.599,314,0.7,319,1.013,321,1.548,322,1.184,323,0.835,324,1.184,329,1.184,330,1.184,332,1.412,333,0.835,334,0.835,350,1.316,385,0.755,387,0.581,391,1.412,407,2.001,408,1.498,412,0.7,413,0.7,421,1.412,428,1.412,432,2.619,433,0.835,434,0.835,460,1.412,462,0.835,471,2.619,475,0.835,479,0.835,482,0.835,485,0.835,488,2.413,489,2.158,490,2.158,491,2.413,494,1.412,495,1.412,502,0.7,503,0.835,504,0.835,505,0.835,511,0.835,513,0.835,515,1.412,517,0.835,519,2.79,520,0.835,521,0.835,522,0.835,523,1.412,524,0.835,525,0.835,527,0.835,529,1.835,530,0.835,531,0.835,532,0.835,534,0.835,535,0.835,536,1.412,537,0.835,553,1.412,596,2.79,598,0.835,616,0.835,628,1.412,634,1.412,649,3.251,662,0.835,665,3.006,666,1.04,667,1.759,668,1.04,669,1.04,670,1.759,671,1.759,672,3.936,673,1.04,674,1.04,675,1.759,676,1.412,677,1.04,678,1.759,679,1.04,680,3.263,681,3.006,682,1.04,683,1.04,684,1.759,685,1.759,686,1.759,687,1.04,688,1.04,689,1.04,690,1.04,691,3.475,692,1.04,693,2.688,694,1.759,695,1.04,696,1.04,697,1.04,698,2.286,699,1.04,700,1.04,701,1.04,702,1.04,703,1.759,704,1.04,705,1.04,706,2.286,707,1.04,708,3.653,709,1.759,710,1.759,711,1.04,712,2.688,713,1.04,714,1.04,715,1.04,716,1.04,717,1.04,718,1.759,719,1.04,720,1.04,721,1.04,722,1.04,723,1.759,724,1.04,725,1.04,726,1.04,727,1.04,728,1.04,729,2.286,730,1.04,731,1.04,732,2.286,733,1.759,734,1.759,735,1.759,736,3.653,737,1.759,738,1.04,739,1.759,740,1.04,741,1.04,742,3.006,743,2.286,744,1.759,745,1.04,746,1.04,747,1.04,748,1.759,749,1.04,750,1.04,751,1.04,752,1.04,753,3.006,754,2.688,755,0.835,756,1.759,757,1.04,758,2.286,759,1.04,760,2.286,761,2.286,762,1.04,763,1.04,764,1.759,765,1.04,766,1.04,767,1.04,768,2.688,769,1.759,770,1.04,771,1.04,772,1.04,773,1.04,774,1.759,775,2.286,776,1.04,777,1.04,778,1.04,779,1.759,780,1.04,781,2.158,782,1.04,783,1.759,784,1.04,785,1.759,786,0.835,787,1.04,788,1.04,789,1.04,790,1.759,791,1.04,792,1.759,793,1.04,794,3.006,795,1.04,796,1.04,797,1.04,798,1.04,799,1.04,800,1.04,801,1.04,802,1.04,803,1.04,804,1.04,805,2.286,806,1.04,807,1.04,808,1.759,809,3.006,810,1.759,811,1.759,812,1.04,813,1.04,814,1.04,815,1.04,816,1.04,817,1.04,818,1.04,819,1.04,820,1.759,821,1.04,822,3.006,823,1.759,824,2.688,825,1.835,826,1.04,827,1.04,828,1.04,829,1.04,830,1.04,831,1.04,832,1.04,833,1.04,834,1.04,835,1.04,836,1.04,837,1.04,838,3.263,839,3.263,840,3.475,841,2.688,842,1.759,843,1.04,844,1.04,845,1.759,846,1.759,847,1.759,848,1.759,849,1.04,850,1.04,851,1.04,852,1.04,853,1.759,854,1.04,855,1.04,856,1.04,857,1.04,858,1.04,859,1.04,860,1.04,861,1.04,862,1.04,863,1.04,864,1.04,865,1.04,866,1.04,867,1.04,868,2.286,869,1.04,870,1.04,871,1.04,872,1.759,873,1.04,874,1.04,875,1.04,876,1.04,877,1.04,878,1.04,879,1.04,880,1.04,881,1.04,882,1.04,883,1.04,884,1.04,885,1.04,886,1.04,887,1.04,888,1.04,889,1.04,890,1.04,891,1.759,892,1.04,893,1.04,894,1.04,895,1.04,896,2.286,897,1.04,898,1.04,899,1.04,900,1.04,901,1.04,902,1.04,903,1.759]],["title/license.html",[663,1.855,664,1.855,904,1.855]],["body/license.html",[30,0.044,67,0.036,68,0.044,69,0.036,121,1.937,128,1.593,353,2.114,419,2.47,502,2.47,615,2.946,755,2.946,781,2.946,786,3.584,825,2.946,904,2.946,905,3.67,906,4.812,907,3.67,908,3.67,909,3.67,910,4.465,911,3.67,912,3.67,913,3.67,914,3.67,915,3.67,916,3.67,917,4.465,918,5.369,919,3.67,920,3.67,921,3.67,922,4.812,923,3.67,924,3.67,925,3.67,926,3.67,927,3.67,928,3.67,929,3.67,930,3.67,931,3.67,932,3.67,933,4.465,934,3.67,935,3.67,936,3.67,937,3.67,938,4.465,939,4.465,940,3.67,941,3.67,942,3.67,943,3.67,944,3.67,945,3.67,946,3.67,947,3.67,948,3.67,949,3.67,950,3.67,951,3.67,952,3.67,953,3.67,954,3.67,955,3.67,956,3.67,957,3.67,958,3.67,959,3.67,960,3.67,961,3.67,962,3.67,963,3.67,964,3.67,965,3.67,966,3.67]],["title/modules.html",[409,2.492]],["body/modules.html",[30,0.048,67,0.042,68,0.048,69,0.042,408,2.134,409,2.881,640,3.437,967,4.282,968,4.282,969,4.282]],["title/overview.html",[970,2.973]],["body/overview.html",[2,1.929,30,0.053,43,1.465,67,0.038,68,0.045,69,0.038,120,1.112,155,2.604,271,3.106,296,1.763,308,1.465,379,1.929,385,1.763,387,1.763,407,2.654,408,2.723,410,2.228,411,3.106,412,2.604,413,2.604,414,3.106,415,3.106,416,3.106,417,3.7,418,3.106,419,2.604,676,3.106,970,3.106,971,3.869]],["title/miscellaneous/typealiases.html",[659,1.003,972,3.288]],["body/miscellaneous/typealiases.html",[6,0.403,8,0.621,29,0.621,30,0.047,67,0.04,68,0.047,69,0.04,71,1.775,85,2.039,88,1.775,96,1.804,97,2.252,103,2.039,104,1.018,105,0.742,106,2.039,107,1.775,108,1.775,109,2.039,110,1.549,111,2.039,112,2.067,113,1.804,659,1.775,661,4.045,973,4.091]],["title/miscellaneous/variables.html",[659,1.003,974,2.64]],["body/miscellaneous/variables.html",[1,1.233,6,0.367,7,2.511,8,0.566,11,2.511,12,2.511,13,2.511,14,2.511,15,2.511,16,2.511,17,2.511,18,2.511,19,2.511,20,2.511,21,2.511,22,2.511,23,2.511,24,2.511,25,2.511,26,2.511,27,2.511,29,0.684,30,0.053,33,3.035,37,1.708,38,1.413,39,2.996,40,2.996,41,1.619,42,1.122,43,1.413,44,1.957,45,2.511,46,1.984,47,2.511,48,2.511,49,2.511,50,2.511,51,2.511,52,2.511,53,2.511,54,1.233,55,1.413,56,2.511,57,2.511,58,2.149,59,1.619,60,1.619,61,0.797,62,2.511,63,1.49,64,1.708,65,1.708,66,2.511,67,0.036,68,0.044,69,0.036,92,1.296,105,0.818,659,1.619,974,2.996,975,4.51]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":94,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"index.html":{}}}],["0).length",{"_index":556,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["0.8.26",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":120,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"classes/NgxListFnFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["1.14.7",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":55,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":58,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":271,"title":{},"body":{"classes/NgxList.html":{},"overview.html":{}}}],["2.5.4",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":908,"title":{},"body":{"license.html":{}}}],["25",{"_index":56,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["25kb",{"_index":864,"title":{},"body":{"index.html":{}}}],["3",{"_index":971,"title":{},"body":{"overview.html":{}}}],["3.4.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":676,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.17.11",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":57,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":465,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["6.5.2",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":887,"title":{},"body":{"index.html":{}}}],["7.2.15",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["7.6kb",{"_index":865,"title":{},"body":{"index.html":{}}}],["8/9",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":628,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["9",{"_index":724,"title":{},"body":{"index.html":{}}}],["_",{"_index":873,"title":{},"body":{"index.html":{}}}],["_filters",{"_index":236,"title":{},"body":{"classes/NgxList.html":{}}}],["_idkey",{"_index":231,"title":{},"body":{"classes/NgxList.html":{}}}],["_ngunsubscribe",{"_index":356,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["_params",{"_index":234,"title":{},"body":{"classes/NgxList.html":{}}}],["_result",{"_index":235,"title":{},"body":{"classes/NgxList.html":{}}}],["_sortfn",{"_index":237,"title":{},"body":{"classes/NgxList.html":{}}}],["_src",{"_index":230,"title":{},"body":{"classes/NgxList.html":{}}}],["_subscription",{"_index":232,"title":{},"body":{"classes/NgxList.html":{}}}],["_update(srcrecords",{"_index":275,"title":{},"body":{"classes/NgxList.html":{}}}],["above",{"_index":755,"title":{},"body":{"index.html":{},"license.html":{}}}],["access",{"_index":773,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":163,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["action",{"_index":960,"title":{},"body":{"license.html":{}}}],["active",{"_index":466,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["actual_component",{"_index":389,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["add",{"_index":293,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["additionally",{"_index":765,"title":{},"body":{"index.html":{}}}],["against",{"_index":483,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["agnostic",{"_index":673,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":973,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":457,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["allowsyntheticdefaultimports",{"_index":877,"title":{},"body":{"index.html":{}}}],["already",{"_index":831,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":931,"title":{},"body":{"license.html":{}}}],["angular",{"_index":670,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":423,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":352,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":743,"title":{},"body":{"index.html":{}}}],["app",{"_index":712,"title":{},"body":{"index.html":{}}}],["appear",{"_index":190,"title":{},"body":{"classes/NgxList.html":{}}}],["applied",{"_index":147,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["applying",{"_index":150,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{}}}],["aria",{"_index":839,"title":{},"body":{"index.html":{}}}],["arising",{"_index":964,"title":{},"body":{"license.html":{}}}],["array",{"_index":519,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["array.isarray(value",{"_index":577,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ascending",{"_index":848,"title":{},"body":{"index.html":{}}}],["associated",{"_index":919,"title":{},"body":{"license.html":{}}}],["assuming",{"_index":716,"title":{},"body":{"index.html":{}}}],["attached",{"_index":820,"title":{},"body":{"index.html":{}}}],["authors",{"_index":954,"title":{},"body":{"license.html":{}}}],["available",{"_index":677,"title":{},"body":{"index.html":{}}}],["awesome",{"_index":851,"title":{},"body":{"index.html":{}}}],["bad",{"_index":872,"title":{},"body":{"index.html":{}}}],["bar",{"_index":777,"title":{},"body":{"index.html":{}}}],["base",{"_index":671,"title":{},"body":{"index.html":{}}}],["based",{"_index":90,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{}}}],["bash",{"_index":685,"title":{},"body":{"index.html":{}}}],["basic",{"_index":702,"title":{},"body":{"index.html":{}}}],["befor",{"_index":149,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["before",{"_index":218,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["behaviorsubject",{"_index":219,"title":{},"body":{"classes/NgxList.html":{}}}],["belong",{"_index":143,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["between",{"_index":205,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["boolean",{"_index":134,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["boostrap",{"_index":821,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":308,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/scss/functions",{"_index":455,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["bootstrap/scss/variables",{"_index":456,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["bootstrapsize",{"_index":322,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"index.html":{}}}],["browse",{"_index":969,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":640,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["btn",{"_index":332,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"index.html":{}}}],["build",{"_index":698,"title":{},"body":{"index.html":{}}}],["button",{"_index":822,"title":{},"body":{"index.html":{}}}],["buttonclass",{"_index":323,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"index.html":{}}}],["buttons",{"_index":735,"title":{},"body":{"index.html":{}}}],["c",{"_index":907,"title":{},"body":{"license.html":{}}}],["call",{"_index":177,"title":{},"body":{"classes/NgxList.html":{}}}],["can't",{"_index":861,"title":{},"body":{"index.html":{}}}],["case",{"_index":515,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["casedsearch",{"_index":509,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["casedvalue",{"_index":585,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["casedvalue.indexof(casedsearch",{"_index":587,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["casesensitive",{"_index":495,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["center",{"_index":459,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["changed",{"_index":270,"title":{},"body":{"classes/NgxList.html":{}}}],["charge",{"_index":914,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":222,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["chunk(results",{"_index":288,"title":{},"body":{"classes/NgxList.html":{}}}],["claim",{"_index":957,"title":{},"body":{"license.html":{}}}],["class",{"_index":153,"title":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{}},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":155,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"overview.html":{}}}],["cleans",{"_index":173,"title":{},"body":{"classes/NgxList.html":{}}}],["cli",{"_index":885,"title":{},"body":{"index.html":{}}}],["clone",{"_index":891,"title":{},"body":{"index.html":{}}}],["cluster_ngxlistbootstrapmodule",{"_index":414,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"overview.html":{}}}],["cluster_ngxlistbootstrapmodule_declarations",{"_index":415,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"overview.html":{}}}],["cluster_ngxlistbootstrapmodule_exports",{"_index":416,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"overview.html":{}}}],["code",{"_index":681,"title":{},"body":{"index.html":{}}}],["color",{"_index":463,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["column",{"_index":127,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["columns",{"_index":533,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["combinelatest",{"_index":221,"title":{},"body":{"classes/NgxList.html":{}}}],["commonmodule",{"_index":422,"title":{},"body":{"modules/NgxListBootstrapModule.html":{}}}],["compare",{"_index":596,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["compared",{"_index":514,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["comparing",{"_index":481,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["comparison",{"_index":115,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["comparisonfilter",{"_index":472,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["comparisonfilter(options",{"_index":479,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["compile",{"_index":874,"title":{},"body":{"index.html":{}}}],["compileroptions",{"_index":878,"title":{},"body":{"index.html":{}}}],["component",{"_index":295,"title":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":178,"title":{},"body":{"classes/NgxList.html":{}}}],["component_template",{"_index":383,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["components",{"_index":43,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":937,"title":{},"body":{"license.html":{}}}],["config",{"_index":901,"title":{},"body":{"index.html":{}}}],["connection",{"_index":965,"title":{},"body":{"license.html":{}}}],["consistently",{"_index":862,"title":{},"body":{"index.html":{}}}],["const",{"_index":36,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["constrained",{"_index":771,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":164,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["constructor(defaultoptions",{"_index":326,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["constructor(options",{"_index":165,"title":{},"body":{"classes/NgxList.html":{}}}],["containing",{"_index":513,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["contains",{"_index":812,"title":{},"body":{"index.html":{}}}],["contract",{"_index":961,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":880,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":881,"title":{},"body":{"index.html":{}}}],["control",{"_index":314,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"index.html":{}}}],["controls",{"_index":675,"title":{},"body":{"index.html":{}}}],["copies",{"_index":933,"title":{},"body":{"license.html":{}}}],["copy",{"_index":917,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":906,"title":{},"body":{"license.html":{}}}],["core",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":614,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":168,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["created",{"_index":98,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["creates",{"_index":763,"title":{},"body":{"index.html":{}}}],["creating",{"_index":778,"title":{},"body":{"index.html":{}}}],["css",{"_index":696,"title":{},"body":{"index.html":{}}}],["current",{"_index":54,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["currentkeys",{"_index":549,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["currentkeys.join",{"_index":552,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["currentkeys.length",{"_index":551,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["currentpagetitle",{"_index":11,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":958,"title":{},"body":{"license.html":{}}}],["darr",{"_index":62,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":750,"title":{},"body":{"index.html":{}}}],["data.service",{"_index":711,"title":{},"body":{"index.html":{}}}],["dataservice",{"_index":715,"title":{},"body":{"index.html":{}}}],["dataservice.data",{"_index":717,"title":{},"body":{"index.html":{}}}],["dates",{"_index":525,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["deal",{"_index":921,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":966,"title":{},"body":{"license.html":{}}}],["deciding",{"_index":500,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["declarations",{"_index":411,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"overview.html":{}}}],["decoration",{"_index":461,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["deeply",{"_index":787,"title":{},"body":{"index.html":{}}}],["default",{"_index":92,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":328,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["defaultreversed",{"_index":434,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["defaults",{"_index":100,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["defined",{"_index":166,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{}}}],["demo",{"_index":680,"title":{},"body":{"index.html":{}}}],["demo.component.html",{"_index":713,"title":{},"body":{"index.html":{}}}],["demo/src",{"_index":890,"title":{},"body":{"index.html":{}}}],["democomponent",{"_index":714,"title":{},"body":{"index.html":{}}}],["depend",{"_index":700,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":410,"title":{"dependencies.html":{}},"body":{"modules/NgxListBootstrapModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":856,"title":{},"body":{"index.html":{}}}],["depending",{"_index":689,"title":{},"body":{"index.html":{}}}],["deps",{"_index":895,"title":{},"body":{"index.html":{}}}],["desc",{"_index":131,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["descending",{"_index":196,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["description",{"_index":152,"title":{},"body":{"interfaces/INgxListResult.html":{}}}],["destroy",{"_index":158,"title":{},"body":{"classes/NgxList.html":{}}}],["directive",{"_index":381,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["directives",{"_index":388,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["directly",{"_index":836,"title":{},"body":{"index.html":{}}}],["display",{"_index":377,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["displayed",{"_index":129,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{}}}],["distribute",{"_index":929,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":615,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":806,"title":{},"body":{"index.html":{}}}],["dom",{"_index":299,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["don't",{"_index":809,"title":{},"body":{"index.html":{}}}],["dot",{"_index":488,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["dotkey",{"_index":550,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["dotkey.indexof(ik",{"_index":555,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["dotkeys",{"_index":473,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["dotkeys(x",{"_index":484,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["dotkeys.push(dotkey",{"_index":557,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["dropdown",{"_index":736,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":775,"title":{},"body":{"index.html":{}}}],["each",{"_index":87,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["effect",{"_index":843,"title":{},"body":{"index.html":{}}}],["element",{"_index":380,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["elsewhere",{"_index":868,"title":{},"body":{"index.html":{}}}],["emitevent",{"_index":406,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["empty",{"_index":504,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["end",{"_index":139,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["enum",{"_index":117,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["enumerations",{"_index":660,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":119,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["esmoduleinterop",{"_index":876,"title":{},"body":{"index.html":{}}}],["etc",{"_index":835,"title":{},"body":{"index.html":{}}}],["event",{"_index":953,"title":{},"body":{"license.html":{}}}],["eventually",{"_index":770,"title":{},"body":{"index.html":{}}}],["everything",{"_index":859,"title":{},"body":{"index.html":{}}}],["example",{"_index":729,"title":{},"body":{"index.html":{}}}],["exist",{"_index":534,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["exports",{"_index":413,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":704,"title":{},"body":{"index.html":{}}}],["exposes",{"_index":766,"title":{},"body":{"index.html":{}}}],["express",{"_index":945,"title":{},"body":{"license.html":{}}}],["extends",{"_index":142,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["factories",{"_index":759,"title":{},"body":{"index.html":{}}}],["factory",{"_index":110,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["factory.ts",{"_index":470,"title":{},"body":{"classes/NgxListFnFactory.html":{},"coverage.html":{}}}],["factory.ts:108",{"_index":507,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:136",{"_index":510,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:167",{"_index":512,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:194",{"_index":480,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:23",{"_index":499,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:33",{"_index":486,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:55",{"_index":496,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["factory.ts:83",{"_index":528,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["fallback",{"_index":752,"title":{},"body":{"index.html":{}}}],["fallbacksortcolumn",{"_index":530,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["false",{"_index":132,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{}}}],["files",{"_index":920,"title":{},"body":{"license.html":{}}}],["filter",{"_index":81,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["filtered",{"_index":667,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":109,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filterkey",{"_index":135,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["filters",{"_index":72,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["filtervalue",{"_index":505,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["filtervalues",{"_index":73,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["first",{"_index":45,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["first/last",{"_index":734,"title":{},"body":{"index.html":{}}}],["firstpagebuttonhtml",{"_index":12,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firstpagebuttontitle",{"_index":13,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":950,"title":{},"body":{"license.html":{}}}],["flex",{"_index":378,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["fn",{"_index":228,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{}}}],["fn(results",{"_index":280,"title":{},"body":{"classes/NgxList.html":{}}}],["following",{"_index":781,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":850,"title":{},"body":{"index.html":{}}}],["foo",{"_index":756,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":524,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["formcontrol",{"_index":343,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{}}}],["formcontrol(0",{"_index":359,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["formcontrol(10",{"_index":403,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["free",{"_index":913,"title":{},"body":{"license.html":{}}}],["function",{"_index":97,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":111,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":936,"title":{},"body":{"license.html":{}}}],["generated",{"_index":884,"title":{},"body":{"index.html":{}}}],["generic",{"_index":797,"title":{},"body":{"index.html":{}}}],["get(record",{"_index":563,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["getcolumnvaluefn",{"_index":474,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["getcolumnvaluefn(k",{"_index":493,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["getfiltervalues",{"_index":210,"title":{},"body":{"classes/NgxList.html":{}}}],["getnormalizedoptions",{"_index":348,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["getpage",{"_index":203,"title":{},"body":{"classes/NgxList.html":{}}}],["getpagecount",{"_index":212,"title":{},"body":{"classes/NgxList.html":{}}}],["getrecordcount",{"_index":214,"title":{},"body":{"classes/NgxList.html":{}}}],["getrecords",{"_index":201,"title":{},"body":{"classes/NgxList.html":{}}}],["getrecordsperpage",{"_index":206,"title":{},"body":{"classes/NgxList.html":{}}}],["getresult",{"_index":197,"title":{},"body":{"classes/NgxList.html":{}}}],["getsort",{"_index":208,"title":{},"body":{"classes/NgxList.html":{}}}],["getting",{"_index":663,"title":{"index.html":{},"license.html":{}},"body":{}}],["getunfilteredrecordcount",{"_index":216,"title":{},"body":{"classes/NgxList.html":{}}}],["git",{"_index":892,"title":{},"body":{"index.html":{}}}],["given",{"_index":103,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["good",{"_index":871,"title":{},"body":{"index.html":{}}}],["granted",{"_index":912,"title":{},"body":{"license.html":{}}}],["gray",{"_index":464,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["group",{"_index":732,"title":{},"body":{"index.html":{}}}],["gt",{"_index":124,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["gte",{"_index":123,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["gzipped",{"_index":866,"title":{},"body":{"index.html":{}}}],["happens",{"_index":818,"title":{},"body":{"index.html":{}}}],["headers",{"_index":829,"title":{},"body":{"index.html":{}}}],["helper",{"_index":487,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["here",{"_index":769,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":911,"title":{},"body":{"license.html":{}}}],["hierarchical",{"_index":789,"title":{},"body":{"index.html":{}}}],["holders",{"_index":955,"title":{},"body":{"license.html":{}}}],["host",{"_index":376,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["hover",{"_index":467,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["html",{"_index":41,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/nowzoo/ngx",{"_index":893,"title":{},"body":{"index.html":{}}}],["icons",{"_index":852,"title":{},"body":{"index.html":{}}}],["id",{"_index":86,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["identifier",{"_index":616,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["idkey",{"_index":74,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["ignore",{"_index":520,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["ignored",{"_index":553,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["ignoredkeys",{"_index":485,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["ignoredkeys.filter(ik",{"_index":554,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ignorefilterwhen",{"_index":475,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["ignorefilterwhen(filtervalue",{"_index":498,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["implements",{"_index":302,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["implied",{"_index":946,"title":{},"body":{"license.html":{}}}],["import",{"_index":32,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["imported",{"_index":679,"title":{},"body":{"index.html":{}}}],["imports",{"_index":428,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"index.html":{}}}],["include",{"_index":695,"title":{},"body":{"index.html":{}}}],["included",{"_index":940,"title":{},"body":{"license.html":{}}}],["including",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":126,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["indicator",{"_index":845,"title":{},"body":{"index.html":{}}}],["indicators",{"_index":827,"title":{},"body":{"index.html":{}}}],["individual",{"_index":767,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{}}}],["ingxlistboostrapoptions",{"_index":1,"title":{"interfaces/INgxListBoostrapOptions.html":{}},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ingxlistinit",{"_index":70,"title":{"interfaces/INgxListInit.html":{}},"body":{"interfaces/INgxListInit.html":{},"classes/NgxList.html":{},"coverage.html":{},"index.html":{}}}],["ingxlistparams",{"_index":136,"title":{"interfaces/INgxListParams.html":{}},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"coverage.html":{}}}],["ingxlistresult",{"_index":141,"title":{"interfaces/INgxListResult.html":{}},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{}}}],["initial",{"_index":80,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["initializing",{"_index":748,"title":{},"body":{"index.html":{}}}],["inject",{"_index":351,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["inject(ngx_list_bootstrap_options",{"_index":357,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["injectiontoken",{"_index":33,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["innerhtml",{"_index":841,"title":{},"body":{"index.html":{}}}],["input",{"_index":350,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["inputs",{"_index":321,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["insensitively",{"_index":516,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["inserted",{"_index":844,"title":{},"body":{"index.html":{}}}],["inspected",{"_index":518,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["install",{"_index":684,"title":{},"body":{"index.html":{}}}],["instance",{"_index":529,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["instantiate",{"_index":707,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"overview.html":{}}}],["isfunction",{"_index":224,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{}}}],["isfunction(options.ignorefilterwhen",{"_index":599,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isfunction(options.value",{"_index":603,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isfunction(value",{"_index":576,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isfunction(valuefns[k",{"_index":561,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isfunction(valuefns[key",{"_index":573,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isnan(params.page",{"_index":244,"title":{},"body":{"classes/NgxList.html":{}}}],["isnan(value",{"_index":578,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isplainobject",{"_index":543,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isplainobject(options",{"_index":588,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["isplainobject(value",{"_index":575,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["it's",{"_index":727,"title":{},"body":{"index.html":{}}}],["items",{"_index":458,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["itself",{"_index":888,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":701,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":723,"title":{},"body":{"index.html":{}}}],["k",{"_index":497,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["key",{"_index":84,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["keys",{"_index":490,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["keys.length",{"_index":582,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["keys.shift",{"_index":583,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["keysearchvalue",{"_index":476,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["keysearchvalue(record",{"_index":506,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["kind",{"_index":944,"title":{},"body":{"license.html":{}}}],["know",{"_index":858,"title":{},"body":{"index.html":{}}}],["label",{"_index":840,"title":{},"body":{"index.html":{}}}],["labels",{"_index":39,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":833,"title":{},"body":{"index.html":{}}}],["larr",{"_index":51,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["larrb",{"_index":47,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":48,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lastpage",{"_index":315,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["lastpagebuttonhtml",{"_index":14,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lastpagebuttontitle",{"_index":15,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["latest",{"_index":200,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["layout",{"_index":728,"title":{},"body":{"index.html":{}}}],["legend",{"_index":379,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"overview.html":{}}}],["let's",{"_index":849,"title":{},"body":{"index.html":{}}}],["lg",{"_index":330,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"index.html":{}}}],["liability",{"_index":959,"title":{},"body":{"license.html":{}}}],["liable",{"_index":956,"title":{},"body":{"license.html":{}}}],["library",{"_index":672,"title":{},"body":{"index.html":{}}}],["license",{"_index":904,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":924,"title":{},"body":{"license.html":{}}}],["limited",{"_index":947,"title":{},"body":{"license.html":{}}}],["link",{"_index":246,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["list",{"_index":42,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["list.git",{"_index":894,"title":{},"body":{"index.html":{}}}],["list.setfiltervalue('search",{"_index":776,"title":{},"body":{"index.html":{}}}],["list/src",{"_index":889,"title":{},"body":{"index.html":{}}}],["list/src/lib/bootstrap/bootstrap.module.ts",{"_index":420,"title":{},"body":{"modules/NgxListBootstrapModule.html":{}}}],["list/src/lib/bootstrap/options.ts",{"_index":7,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts",{"_index":301,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"coverage.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:20",{"_index":338,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:21",{"_index":336,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:22",{"_index":335,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:23",{"_index":331,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:24",{"_index":337,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:25",{"_index":344,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:26",{"_index":346,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:27",{"_index":347,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:28",{"_index":345,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:29",{"_index":327,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:34",{"_index":340,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:45",{"_index":339,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:50",{"_index":349,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/pagination/pagination.component.ts:59",{"_index":342,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts",{"_index":390,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{},"coverage.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:21",{"_index":398,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:22",{"_index":396,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:23",{"_index":395,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:24",{"_index":397,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:25",{"_index":394,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:31",{"_index":400,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:42",{"_index":399,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:47",{"_index":402,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/rpp/rpp.component.ts:56",{"_index":401,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts",{"_index":429,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:19",{"_index":438,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:20",{"_index":437,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:21",{"_index":436,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:22",{"_index":439,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:23",{"_index":444,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:24",{"_index":435,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:29",{"_index":441,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:35",{"_index":440,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:40",{"_index":445,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:49",{"_index":442,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/bootstrap/sort/sort.component.ts:57",{"_index":443,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["list/src/lib/fn",{"_index":469,"title":{},"body":{"classes/NgxListFnFactory.html":{},"coverage.html":{}}}],["list/src/lib/list.ts",{"_index":156,"title":{},"body":{"classes/NgxList.html":{},"coverage.html":{}}}],["list/src/lib/list.ts:101",{"_index":209,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:108",{"_index":211,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:115",{"_index":213,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:123",{"_index":215,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:130",{"_index":217,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:139",{"_index":171,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:150",{"_index":186,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:159",{"_index":188,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:168",{"_index":193,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:175",{"_index":183,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:25",{"_index":167,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:64",{"_index":198,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:71",{"_index":199,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:78",{"_index":202,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:87",{"_index":204,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/list.ts:94",{"_index":207,"title":{},"body":{"classes/NgxList.html":{}}}],["list/src/lib/shared.ts",{"_index":71,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["list/wallaby.js",{"_index":902,"title":{},"body":{"index.html":{}}}],["listparams",{"_index":274,"title":{},"body":{"classes/NgxList.html":{}}}],["listparams.filtervalues[key",{"_index":281,"title":{},"body":{"classes/NgxList.html":{}}}],["listparams.page",{"_index":291,"title":{},"body":{"classes/NgxList.html":{}}}],["listparams.recordsperpage",{"_index":286,"title":{},"body":{"classes/NgxList.html":{}}}],["listparams.sort.key",{"_index":283,"title":{},"body":{"classes/NgxList.html":{}}}],["listparams.sort.reversed",{"_index":284,"title":{},"body":{"classes/NgxList.html":{}}}],["lists",{"_index":668,"title":{},"body":{"index.html":{}}}],["literal",{"_index":78,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{}}}],["lodash",{"_index":649,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["lodash/chunk",{"_index":223,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["lodash/get",{"_index":538,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["lodash/isfunction",{"_index":225,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{}}}],["lodash/isplainobject",{"_index":544,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["lodash/sortby",{"_index":537,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["lodash/tostring",{"_index":542,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["lodash/trim",{"_index":540,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["logic",{"_index":805,"title":{},"body":{"index.html":{}}}],["lt",{"_index":125,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["lte",{"_index":662,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["main",{"_index":745,"title":{},"body":{"index.html":{}}}],["make",{"_index":175,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["map",{"_index":79,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["markup",{"_index":834,"title":{},"body":{"index.html":{}}}],["match",{"_index":768,"title":{},"body":{"index.html":{}}}],["matched",{"_index":581,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["matching",{"_index":68,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(0",{"_index":264,"title":{},"body":{"classes/NgxList.html":{}}}],["math.min(pagecount",{"_index":290,"title":{},"body":{"classes/NgxList.html":{}}}],["meaningful",{"_index":796,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":949,"title":{},"body":{"license.html":{}}}],["merge",{"_index":927,"title":{},"body":{"license.html":{}}}],["mess",{"_index":523,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["metadata",{"_index":305,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["method",{"_index":180,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["methods",{"_index":157,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["minimal",{"_index":863,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":659,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":905,"title":{},"body":{"license.html":{}}}],["modify",{"_index":926,"title":{},"body":{"license.html":{}}}],["module",{"_index":407,"title":{"modules/NgxListBootstrapModule.html":{}},"body":{"modules/NgxListBootstrapModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":409,"title":{"modules.html":{}},"body":{"modules/NgxListBootstrapModule.html":{},"modules.html":{}}}],["moment",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":744,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":521,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["mutate",{"_index":810,"title":{},"body":{"index.html":{}}}],["mydataservice",{"_index":710,"title":{},"body":{"index.html":{}}}],["mydatasrc",{"_index":785,"title":{},"body":{"index.html":{}}}],["mymodule",{"_index":739,"title":{},"body":{"index.html":{}}}],["myoptions",{"_index":853,"title":{},"body":{"index.html":{}}}],["mysource",{"_index":741,"title":{},"body":{"index.html":{}}}],["n",{"_index":372,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{}}}],["name",{"_index":137,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["natively",{"_index":860,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":817,"title":{},"body":{"index.html":{}}}],["need",{"_index":694,"title":{},"body":{"index.html":{}}}],["neq",{"_index":122,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["nested",{"_index":774,"title":{},"body":{"index.html":{}}}],["new",{"_index":38,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":52,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextdisabled",{"_index":316,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["nextpagebuttonhtml",{"_index":16,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextpagebuttontitle",{"_index":17,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":896,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":421,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":179,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":319,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["ngx",{"_index":307,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngx_list_bootstrap_default_options",{"_index":44,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngx_list_bootstrap_options",{"_index":37,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxlist",{"_index":154,"title":{"classes/NgxList.html":{}},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{}}}],["ngxlist#pagecount",{"_index":252,"title":{},"body":{"classes/NgxList.html":{}}}],["ngxlist(init",{"_index":746,"title":{},"body":{"index.html":{}}}],["ngxlist({src",{"_index":740,"title":{},"body":{"index.html":{}}}],["ngxlist.comparisonfilter",{"_index":819,"title":{},"body":{"index.html":{}}}],["ngxlistboostrappaginationcomponent",{"_index":296,"title":{"components/NgxListBoostrapPaginationComponent.html":{}},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["ngxlistboostraprppcomponent",{"_index":385,"title":{"components/NgxListBoostrapRppComponent.html":{}},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["ngxlistboostrapsortcomponent",{"_index":826,"title":{},"body":{"index.html":{}}}],["ngxlistbootstrapmodule",{"_index":408,"title":{"modules/NgxListBootstrapModule.html":{}},"body":{"modules/NgxListBootstrapModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxlistbootstrapsortcomponent",{"_index":387,"title":{"components/NgxListBootstrapSortComponent.html":{}},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["ngxlistcolumnvaluefn",{"_index":112,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ngxlistcompare",{"_index":118,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["ngxlistcompare.eq",{"_index":598,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["ngxlistcompare.gt",{"_index":611,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistcompare.gte",{"_index":612,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistcompare.lt",{"_index":613,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistcompare.neq",{"_index":610,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistcompare.what",{"_index":803,"title":{},"body":{"index.html":{}}}],["ngxlistfilterfn",{"_index":113,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ngxlistfnfactory",{"_index":227,"title":{"classes/NgxListFnFactory.html":{}},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"index.html":{}}}],["ngxlistfnfactory.comparisonfilter",{"_index":761,"title":{},"body":{"index.html":{}}}],["ngxlistfnfactory.dotkeys(record",{"_index":580,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistfnfactory.ignorefilterwhen",{"_index":601,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistfnfactory.keysearchvalue(record",{"_index":584,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistfnfactory.recordmatchessearch(record",{"_index":595,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["ngxlistfnfactory.searchfilter",{"_index":760,"title":{},"body":{"index.html":{}}}],["ngxlistfnfactory.sortfn",{"_index":764,"title":{},"body":{"index.html":{}}}],["ngxlistresult",{"_index":709,"title":{},"body":{"index.html":{}}}],["ngxlistsortfn",{"_index":96,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["none",{"_index":462,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["noninfringement",{"_index":952,"title":{},"body":{"license.html":{}}}],["normalizedoptions",{"_index":325,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["normalizedoptions.sortasclabel",{"_index":454,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["normalizedoptions.sortdesclabel",{"_index":453,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["notated",{"_index":489,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["notation",{"_index":772,"title":{},"body":{"index.html":{}}}],["note",{"_index":691,"title":{},"body":{"index.html":{}}}],["notes",{"_index":855,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":762,"title":{},"body":{"index.html":{}}}],["notice",{"_index":938,"title":{},"body":{"license.html":{}}}],["nowzoo",{"_index":909,"title":{},"body":{"license.html":{}}}],["nowzoo/ngx",{"_index":665,"title":{},"body":{"index.html":{}}}],["npm",{"_index":686,"title":{},"body":{"index.html":{}}}],["null",{"_index":233,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["number",{"_index":31,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["numbers",{"_index":737,"title":{},"body":{"index.html":{}}}],["object",{"_index":491,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["object.assign",{"_index":255,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["object.keys(this._filters).foreach(key",{"_index":278,"title":{},"body":{"classes/NgxList.html":{}}}],["object.keys(y).foreach(k",{"_index":558,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["observable",{"_index":101,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["observables",{"_index":669,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":916,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":304,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["one",{"_index":191,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["ones",{"_index":788,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":303,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["operator",{"_index":804,"title":{},"body":{"index.html":{}}}],["option",{"_index":842,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["options",{"_index":170,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["options.casesensitive",{"_index":566,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["options.compare",{"_index":597,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["options.fallbacksortcolumn",{"_index":565,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["options.idkey",{"_index":241,"title":{},"body":{"classes/NgxList.html":{}}}],["options.ignoredkeys",{"_index":589,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["options.ignorefilterwhen",{"_index":600,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["options.src",{"_index":239,"title":{},"body":{"classes/NgxList.html":{}}}],["options.value",{"_index":604,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["options.valuefns",{"_index":567,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["order",{"_index":65,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":963,"title":{},"body":{"license.html":{}}}],["out",{"_index":419,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":333,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"index.html":{}}}],["override",{"_index":824,"title":{},"body":{"index.html":{}}}],["overview",{"_index":970,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":635,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":46,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagecount",{"_index":145,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["pagecount]{@link",{"_index":251,"title":{},"body":{"classes/NgxList.html":{}}}],["pagenumbers",{"_index":317,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["pages",{"_index":144,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["pages.length",{"_index":289,"title":{},"body":{"classes/NgxList.html":{}}}],["pages[page",{"_index":292,"title":{},"body":{"classes/NgxList.html":{}}}],["paginated",{"_index":666,"title":{},"body":{"index.html":{}}}],["pagination",{"_index":309,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"index.html":{}}}],["pagination'},{'name",{"_index":384,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["pagination.component.html",{"_index":313,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["pagination.component.scss",{"_index":311,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["pagination/pagination.component",{"_index":425,"title":{},"body":{"modules/NgxListBootstrapModule.html":{}}}],["paging",{"_index":59,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":272,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["parameter",{"_index":811,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":169,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["params",{"_index":95,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["params.filtervalues[key",{"_index":267,"title":{},"body":{"classes/NgxList.html":{}}}],["params.page",{"_index":242,"title":{},"body":{"classes/NgxList.html":{}}}],["parseint(options.page",{"_index":243,"title":{},"body":{"classes/NgxList.html":{}}}],["particular",{"_index":502,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{},"license.html":{}}}],["pass",{"_index":93,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["passed",{"_index":754,"title":{},"body":{"index.html":{}}}],["paths",{"_index":522,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["payload",{"_index":867,"title":{},"body":{"index.html":{}}}],["per",{"_index":60,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":910,"title":{},"body":{"license.html":{}}}],["permit",{"_index":934,"title":{},"body":{"license.html":{}}}],["person",{"_index":915,"title":{},"body":{"license.html":{}}}],["persons",{"_index":935,"title":{},"body":{"license.html":{}}}],["pipe(takeuntil(this._ngunsubscribe",{"_index":361,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["planning",{"_index":692,"title":{},"body":{"index.html":{}}}],["point",{"_index":725,"title":{},"body":{"index.html":{}}}],["pointing",{"_index":801,"title":{},"body":{"index.html":{}}}],["popper.js",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":942,"title":{},"body":{"license.html":{}}}],["prev/next",{"_index":733,"title":{},"body":{"index.html":{}}}],["prevdisabled",{"_index":318,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["previous",{"_index":50,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prevpagebuttonhtml",{"_index":18,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prevpagebuttontitle",{"_index":19,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":468,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["private",{"_index":229,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["probably",{"_index":875,"title":{},"body":{"index.html":{}}}],["problem",{"_index":688,"title":{},"body":{"index.html":{}}}],["process",{"_index":699,"title":{},"body":{"index.html":{}}}],["product",{"_index":140,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["profile",{"_index":790,"title":{},"body":{"index.html":{}}}],["profile.firstname",{"_index":138,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["projects/.../options.ts",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../shared.ts",{"_index":661,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["property",{"_index":738,"title":{},"body":{"index.html":{}}}],["provide",{"_index":794,"title":{},"body":{"index.html":{}}}],["provided",{"_index":825,"title":{},"body":{"index.html":{},"license.html":{}}}],["providers",{"_index":412,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":730,"title":{},"body":{"index.html":{}}}],["publish",{"_index":928,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":951,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":106,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["query",{"_index":757,"title":{},"body":{"index.html":{}}}],["quick",{"_index":682,"title":{},"body":{"index.html":{}}}],["rarr",{"_index":53,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rarrb",{"_index":49,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["raw",{"_index":535,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":424,"title":{},"body":{"modules/NgxListBootstrapModule.html":{}}}],["read",{"_index":690,"title":{},"body":{"index.html":{}}}],["reader",{"_index":847,"title":{},"body":{"index.html":{}}}],["rec",{"_index":799,"title":{},"body":{"index.html":{}}}],["rec.verified",{"_index":800,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":802,"title":{},"body":{"index.html":{}}}],["record",{"_index":88,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["recordcount",{"_index":148,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["recordmatchessearch",{"_index":477,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["recordmatchessearch(record",{"_index":508,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["records",{"_index":91,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["records.filter((record",{"_index":594,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["records.slice",{"_index":592,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["records.slice(0",{"_index":606,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["recordsperpage",{"_index":75,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["recordsperpagelabel",{"_index":20,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["recordsperpagenopaginglabel",{"_index":21,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["recordsperpageoptions",{"_index":22,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["recordvalue",{"_index":607,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["recurse",{"_index":547,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["recurse(x",{"_index":560,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["recurse(y[k",{"_index":559,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["replace",{"_index":780,"title":{},"body":{"index.html":{}}}],["required",{"_index":83,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["reset",{"_index":418,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"overview.html":{}}}],["restriction",{"_index":923,"title":{},"body":{"license.html":{}}}],["result",{"_index":67,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.page",{"_index":373,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["result.records",{"_index":726,"title":{},"body":{"index.html":{}}}],["result.sort.key",{"_index":451,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["result.sort.reversed",{"_index":452,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["results",{"_index":69,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":287,"title":{},"body":{"classes/NgxList.html":{}}}],["results.reverse",{"_index":285,"title":{},"body":{"classes/NgxList.html":{}}}],["return",{"_index":247,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["returns",{"_index":104,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["reverse",{"_index":130,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["reversed",{"_index":133,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["reversing",{"_index":816,"title":{},"body":{"index.html":{}}}],["rights",{"_index":925,"title":{},"body":{"license.html":{}}}],["roll",{"_index":758,"title":{},"body":{"index.html":{}}}],["rpp",{"_index":391,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{},"index.html":{}}}],["rpp'},{'name",{"_index":386,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["rpp.component.css",{"_index":392,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["rpp.component.html",{"_index":393,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["rpp/rpp.component",{"_index":426,"title":{},"body":{"modules/NgxListBootstrapModule.html":{}}}],["run",{"_index":501,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":355,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["s",{"_index":687,"title":{},"body":{"index.html":{}}}],["same",{"_index":532,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["scalar",{"_index":517,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["screen",{"_index":846,"title":{},"body":{"index.html":{}}}],["search",{"_index":108,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["search.length",{"_index":591,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["search.tolowercase",{"_index":593,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["searchfilter",{"_index":478,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["searchfilter(options",{"_index":511,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["searching",{"_index":793,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":334,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"index.html":{}}}],["see",{"_index":742,"title":{},"body":{"index.html":{}}}],["select",{"_index":433,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["selected",{"_index":432,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["selectid",{"_index":324,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"index.html":{}}}],["selecting",{"_index":830,"title":{},"body":{"index.html":{}}}],["selector",{"_index":306,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["sell",{"_index":932,"title":{},"body":{"license.html":{}}}],["sensible",{"_index":99,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["sensitively",{"_index":783,"title":{},"body":{"index.html":{}}}],["separate",{"_index":814,"title":{},"body":{"index.html":{}}}],["separately",{"_index":678,"title":{},"body":{"index.html":{}}}],["serve",{"_index":903,"title":{},"body":{"index.html":{}}}],["services",{"_index":705,"title":{},"body":{"index.html":{}}}],["set",{"_index":184,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["setfiltervalue",{"_index":159,"title":{},"body":{"classes/NgxList.html":{}}}],["setfiltervalue(key",{"_index":182,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["setpage",{"_index":160,"title":{},"body":{"classes/NgxList.html":{}}}],["setpage(page",{"_index":185,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["setrecordsperpage",{"_index":161,"title":{},"body":{"classes/NgxList.html":{}}}],["setrecordsperpage(recordsperpage",{"_index":187,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["setsort",{"_index":162,"title":{},"body":{"classes/NgxList.html":{}}}],["setsort(sort",{"_index":192,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["shakeable",{"_index":869,"title":{},"body":{"index.html":{}}}],["shall",{"_index":939,"title":{},"body":{"license.html":{}}}],["shape",{"_index":749,"title":{},"body":{"index.html":{}}}],["shared",{"_index":226,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{}}}],["signature",{"_index":808,"title":{},"body":{"index.html":{}}}],["single",{"_index":482,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["size",{"_index":823,"title":{},"body":{"index.html":{}}}],["sm",{"_index":329,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"index.html":{}}}],["software",{"_index":918,"title":{},"body":{"license.html":{}}}],["something",{"_index":795,"title":{},"body":{"index.html":{}}}],["somewhere",{"_index":697,"title":{},"body":{"index.html":{}}}],["sort",{"_index":61,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sort.component.html",{"_index":431,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["sort.component.scss",{"_index":430,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["sort/sort.component",{"_index":427,"title":{},"body":{"modules/NgxListBootstrapModule.html":{}}}],["sortaschtml",{"_index":23,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sortasclabel",{"_index":24,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sortby",{"_index":536,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["sortby(records",{"_index":572,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["sortcolumn",{"_index":568,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["sortdeschtml",{"_index":25,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sortdesclabel",{"_index":26,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sorted",{"_index":63,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sortfn",{"_index":76,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["sortfn(options",{"_index":527,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["sortfns",{"_index":569,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["sortfns.push(ngxlistfnfactory.getcolumnvaluefn(fallbacksortcolumn",{"_index":571,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["sortfns.push(ngxlistfnfactory.getcolumnvaluefn(sortcolumn",{"_index":570,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["sorting",{"_index":107,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["sortkey",{"_index":114,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{}}}],["sortlabel",{"_index":27,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"modules/NgxListBootstrapModule.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["src",{"_index":77,"title":{},"body":{"interfaces/INgxListInit.html":{},"index.html":{}}}],["srcrecords",{"_index":273,"title":{},"body":{"classes/NgxList.html":{}}}],["srcrecords.length",{"_index":276,"title":{},"body":{"classes/NgxList.html":{}}}],["srcrecords.slice(0",{"_index":277,"title":{},"body":{"classes/NgxList.html":{}}}],["start",{"_index":683,"title":{},"body":{"index.html":{}}}],["started",{"_index":664,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":471,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["string",{"_index":28,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["string).tolowercase",{"_index":564,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["strings",{"_index":782,"title":{},"body":{"index.html":{}}}],["styles",{"_index":298,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["styleurls",{"_index":310,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["styling",{"_index":674,"title":{},"body":{"index.html":{}}}],["subject",{"_index":353,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"license.html":{}}}],["sublicense",{"_index":930,"title":{},"body":{"license.html":{}}}],["subscribe(result",{"_index":366,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["subscribe(val",{"_index":362,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{}}}],["subscription",{"_index":220,"title":{},"body":{"classes/NgxList.html":{}}}],["substantial",{"_index":941,"title":{},"body":{"license.html":{}}}],["suggestions",{"_index":882,"title":{},"body":{"index.html":{}}}],["suit",{"_index":807,"title":{},"body":{"index.html":{}}}],["support",{"_index":967,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":176,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["sutable",{"_index":828,"title":{},"body":{"index.html":{}}}],["svg",{"_index":968,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":609,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["syntax",{"_index":870,"title":{},"body":{"index.html":{}}}],["table",{"_index":634,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":747,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":354,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["template",{"_index":297,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["templateurl",{"_index":312,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["test",{"_index":899,"title":{},"body":{"index.html":{}}}],["tests",{"_index":898,"title":{},"body":{"index.html":{}}}],["text",{"_index":460,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["themed",{"_index":731,"title":{},"body":{"index.html":{}}}],["there's",{"_index":706,"title":{},"body":{"index.html":{}}}],["this._filters[key",{"_index":279,"title":{},"body":{"classes/NgxList.html":{}}}],["this._idkey",{"_index":240,"title":{},"body":{"classes/NgxList.html":{}}}],["this._ngunsubscribe.complete",{"_index":369,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["this._ngunsubscribe.next",{"_index":368,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["this._params$.complete",{"_index":262,"title":{},"body":{"classes/NgxList.html":{}}}],["this._params$.next(object.assign",{"_index":265,"title":{},"body":{"classes/NgxList.html":{}}}],["this._params$.next(params",{"_index":268,"title":{},"body":{"classes/NgxList.html":{}}}],["this._params$.value",{"_index":266,"title":{},"body":{"classes/NgxList.html":{}}}],["this._params$.value.filtervalues",{"_index":257,"title":{},"body":{"classes/NgxList.html":{}}}],["this._params$.value.sort",{"_index":256,"title":{},"body":{"classes/NgxList.html":{}}}],["this._result$.asobservable",{"_index":248,"title":{},"body":{"classes/NgxList.html":{}}}],["this._result$.complete",{"_index":263,"title":{},"body":{"classes/NgxList.html":{}}}],["this._result$.next(result",{"_index":294,"title":{},"body":{"classes/NgxList.html":{}}}],["this._result$.value",{"_index":249,"title":{},"body":{"classes/NgxList.html":{}}}],["this._sortfn(results",{"_index":282,"title":{},"body":{"classes/NgxList.html":{}}}],["this._src",{"_index":238,"title":{},"body":{"classes/NgxList.html":{}}}],["this._subscription.unsubscribe",{"_index":261,"title":{},"body":{"classes/NgxList.html":{}}}],["this._update(...results",{"_index":245,"title":{},"body":{"classes/NgxList.html":{}}}],["this.control",{"_index":358,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{}}}],["this.control.setvalue(result.recordsperpage",{"_index":405,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["this.control.valuechanges",{"_index":360,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{}}}],["this.dataservice.data",{"_index":719,"title":{},"body":{"index.html":{}}}],["this.defaultoptions",{"_index":370,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["this.defaultreversed",{"_index":446,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["this.key",{"_index":450,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["this.lastpage",{"_index":375,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["this.list",{"_index":718,"title":{},"body":{"index.html":{}}}],["this.list.destroy",{"_index":722,"title":{},"body":{"index.html":{}}}],["this.list.result",{"_index":365,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["this.list.results$.subscribe(result",{"_index":720,"title":{},"body":{"index.html":{}}}],["this.list.setpage(val",{"_index":363,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["this.list.setrecordsperpage(val",{"_index":404,"title":{},"body":{"components/NgxListBoostrapRppComponent.html":{}}}],["this.list.setsort({key",{"_index":449,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["this.nextdisabled",{"_index":374,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{}}}],["this.options",{"_index":371,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["this.result",{"_index":721,"title":{},"body":{"index.html":{}}}],["this.result.page",{"_index":253,"title":{},"body":{"classes/NgxList.html":{}}}],["this.result.pagecount",{"_index":258,"title":{},"body":{"classes/NgxList.html":{}}}],["this.result.recordcount",{"_index":259,"title":{},"body":{"classes/NgxList.html":{}}}],["this.result.records",{"_index":250,"title":{},"body":{"classes/NgxList.html":{}}}],["this.result.recordsperpage",{"_index":254,"title":{},"body":{"classes/NgxList.html":{}}}],["this.result.unfilteredrecordcount",{"_index":260,"title":{},"body":{"classes/NgxList.html":{}}}],["this.reversed",{"_index":448,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["this.selected",{"_index":447,"title":{},"body":{"components/NgxListBootstrapSortComponent.html":{}}}],["this.updatecontrol(result",{"_index":367,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["this.updatecontrol(this.list.result",{"_index":364,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{}}}],["title",{"_index":838,"title":{},"body":{"index.html":{}}}],["toggles",{"_index":832,"title":{},"body":{"index.html":{}}}],["token",{"_index":837,"title":{},"body":{"index.html":{}}}],["top",{"_index":784,"title":{},"body":{"index.html":{}}}],["tort",{"_index":962,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":541,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["tostring(options.value",{"_index":605,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["tostring(value",{"_index":579,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["tostring(valuefns[key](record",{"_index":574,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["total",{"_index":146,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{}}}],["tree",{"_index":300,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["trim",{"_index":539,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["trim(filtervalue",{"_index":590,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["trim(filtervalue).length",{"_index":546,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["true",{"_index":194,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["ts",{"_index":708,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":879,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":531,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":972,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":545,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["types",{"_index":116,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"miscellaneous/enumerations.html":{}}}],["uarr",{"_index":66,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":503,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["under",{"_index":791,"title":{},"body":{"index.html":{}}}],["unfiltered",{"_index":813,"title":{},"body":{"index.html":{}}}],["unfilteredrecordcount",{"_index":151,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{}}}],["unique",{"_index":751,"title":{},"body":{"index.html":{}}}],["unit",{"_index":897,"title":{},"body":{"index.html":{}}}],["unpaged",{"_index":189,"title":{},"body":{"classes/NgxList.html":{}}}],["unsorted",{"_index":815,"title":{},"body":{"index.html":{}}}],["unsubscribes",{"_index":172,"title":{},"body":{"classes/NgxList.html":{}}}],["up",{"_index":174,"title":{},"body":{"classes/NgxList.html":{},"index.html":{}}}],["update",{"_index":269,"title":{},"body":{"classes/NgxList.html":{}}}],["updatecontrol",{"_index":320,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["updatecontrol(result",{"_index":341,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["usage",{"_index":703,"title":{},"body":{"index.html":{}}}],["use",{"_index":121,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxListFnFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":85,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["uses",{"_index":779,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":854,"title":{},"body":{"index.html":{}}}],["using",{"_index":693,"title":{},"body":{"index.html":{}}}],["value",{"_index":105,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"classes/NgxListFnFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":586,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["valuefn",{"_index":602,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["valuefn(record",{"_index":608,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["valuefns",{"_index":494,"title":{},"body":{"classes/NgxListFnFactory.html":{},"index.html":{}}}],["valuefns[k",{"_index":562,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["values",{"_index":82,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["var",{"_index":382,"title":{},"body":{"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{}}}],["variable",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":974,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":798,"title":{},"body":{"index.html":{}}}],["version",{"_index":886,"title":{},"body":{"index.html":{}}}],["void",{"_index":181,"title":{},"body":{"classes/NgxList.html":{},"components/NgxListBoostrapPaginationComponent.html":{},"components/NgxListBoostrapRppComponent.html":{},"components/NgxListBootstrapSortComponent.html":{},"index.html":{}}}],["wallaby.js",{"_index":900,"title":{},"body":{"index.html":{}}}],["want",{"_index":195,"title":{},"body":{"classes/NgxList.html":{},"classes/NgxListFnFactory.html":{},"index.html":{}}}],["warranties",{"_index":948,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":943,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":883,"title":{},"body":{"index.html":{}}}],["well",{"_index":792,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":753,"title":{},"body":{"index.html":{}}}],["whether",{"_index":128,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{},"license.html":{}}}],["without",{"_index":922,"title":{},"body":{"license.html":{}}}],["x",{"_index":492,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["y",{"_index":548,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["yeah",{"_index":857,"title":{},"body":{"index.html":{}}}],["yes",{"_index":526,"title":{},"body":{"classes/NgxListFnFactory.html":{}}}],["z",{"_index":64,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["zero",{"_index":89,"title":{},"body":{"interfaces/INgxListInit.html":{},"interfaces/INgxListParams.html":{},"interfaces/INgxListResult.html":{},"classes/NgxList.html":{}}}],["znd",{"_index":40,"title":{},"body":{"interfaces/INgxListBoostrapOptions.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":417,"title":{},"body":{"modules/NgxListBootstrapModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/INgxListBoostrapOptions.html":{"url":"interfaces/INgxListBoostrapOptions.html","title":"interface - INgxListBoostrapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INgxListBoostrapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-list/src/lib/bootstrap/options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        currentPageTitle\n                                \n                                \n                                            Optional\n                                        firstPageButtonHTML\n                                \n                                \n                                            Optional\n                                        firstPageButtonTitle\n                                \n                                \n                                            Optional\n                                        lastPageButtonHTML\n                                \n                                \n                                            Optional\n                                        lastPageButtonTitle\n                                \n                                \n                                            Optional\n                                        nextPageButtonHTML\n                                \n                                \n                                            Optional\n                                        nextPageButtonTitle\n                                \n                                \n                                            Optional\n                                        prevPageButtonHTML\n                                \n                                \n                                            Optional\n                                        prevPageButtonTitle\n                                \n                                \n                                            Optional\n                                        recordsPerPageLabel\n                                \n                                \n                                            Optional\n                                        recordsPerPageNoPagingLabel\n                                \n                                \n                                            Optional\n                                        recordsPerPageOptions\n                                \n                                \n                                            Optional\n                                        sortAscHTML\n                                \n                                \n                                            Optional\n                                        sortAscLabel\n                                \n                                \n                                            Optional\n                                        sortDescHTML\n                                \n                                \n                                            Optional\n                                        sortDescLabel\n                                \n                                \n                                            Optional\n                                        sortLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPageTitle\n                                    \n                                \n                                \n                                    \n                                        currentPageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstPageButtonHTML\n                                    \n                                \n                                \n                                    \n                                        firstPageButtonHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstPageButtonTitle\n                                    \n                                \n                                \n                                    \n                                        firstPageButtonTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPageButtonHTML\n                                    \n                                \n                                \n                                    \n                                        lastPageButtonHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPageButtonTitle\n                                    \n                                \n                                \n                                    \n                                        lastPageButtonTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPageButtonHTML\n                                    \n                                \n                                \n                                    \n                                        nextPageButtonHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPageButtonTitle\n                                    \n                                \n                                \n                                    \n                                        nextPageButtonTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPageButtonHTML\n                                    \n                                \n                                \n                                    \n                                        prevPageButtonHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPageButtonTitle\n                                    \n                                \n                                \n                                    \n                                        prevPageButtonTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordsPerPageLabel\n                                    \n                                \n                                \n                                    \n                                        recordsPerPageLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordsPerPageNoPagingLabel\n                                    \n                                \n                                \n                                    \n                                        recordsPerPageNoPagingLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordsPerPageOptions\n                                    \n                                \n                                \n                                    \n                                        recordsPerPageOptions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortAscHTML\n                                    \n                                \n                                \n                                    \n                                        sortAscHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortAscLabel\n                                    \n                                \n                                \n                                    \n                                        sortAscLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortDescHTML\n                                    \n                                \n                                \n                                    \n                                        sortDescHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortDescLabel\n                                    \n                                \n                                \n                                    \n                                        sortDescLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortLabel\n                                    \n                                \n                                \n                                    \n                                        sortLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nexport interface INgxListBoostrapOptions {\n  firstPageButtonTitle?: string;\n  firstPageButtonHTML?: string;\n  lastPageButtonTitle?: string;\n  lastPageButtonHTML?: string;\n  prevPageButtonTitle?: string;\n  prevPageButtonHTML?: string;\n  nextPageButtonTitle?: string;\n  nextPageButtonHTML?: string;\n  currentPageTitle?: string;\n  recordsPerPageOptions?: number[];\n  recordsPerPageNoPagingLabel?: string;\n  recordsPerPageLabel?: string;\n  sortLabel?: string;\n  sortDescHTML?: string;\n  sortDescLabel?: string;\n  sortAscHTML?: string;\n  sortAscLabel?: string;\n}\nexport const NGX_LIST_BOOTSTRAP_OPTIONS: InjectionToken =\n  new InjectionToken(\n    'labels znd html for the list components'\n  );\n\nexport const NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS: INgxListBoostrapOptions = {\n  firstPageButtonTitle: 'First Page',\n  firstPageButtonHTML: '&larrb;',\n  lastPageButtonTitle: 'Last Page',\n  lastPageButtonHTML: '&rarrb;',\n  prevPageButtonTitle: 'Previous Page',\n  prevPageButtonHTML: '&larr;',\n  nextPageButtonTitle: 'Next Page',\n  nextPageButtonHTML: '&rarr;',\n  currentPageTitle: 'Current Page',\n  recordsPerPageOptions: [10, 25, 50, 100],\n  recordsPerPageNoPagingLabel: 'No paging',\n  recordsPerPageLabel: ' per page',\n  sortLabel: 'Sort List',\n  sortAscHTML: '&darr;',\n  sortAscLabel: 'sorted in a-z order',\n  sortDescHTML: '&uarr;',\n  sortDescLabel: 'sorted in z-a order',\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INgxListInit.html":{"url":"interfaces/INgxListInit.html","title":"interface - INgxListInit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INgxListInit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-list/src/lib/shared.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filters\n                                \n                                \n                                            Optional\n                                        filterValues\n                                \n                                \n                                        idKey\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        recordsPerPage\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortFn\n                                \n                                \n                                        src$\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A map of filters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                    \n                                \n                                \n                                    \n                                        filterValues:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. Initial filter values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idKey\n                                    \n                                \n                                \n                                    \n                                        idKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Required. The key that should be used as the id for each record.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. The initial page, zero-based.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordsPerPage\n                                    \n                                \n                                \n                                    \n                                        recordsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. Initial records per page. Default 10. Pass 0 for no paging.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. The initial sort params.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortFn\n                                    \n                                \n                                \n                                    \n                                        sortFn:         NgxListSortFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxListSortFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional. By default a sort function will be created for you with some sensible defaults.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src$\n                                    \n                                \n                                \n                                    \n                                        src$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Required. An observable of your records.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n\n\n/**\n * A function that, given a record, returns a value for purposes of\n * sorting, search or filtering. Used by the factory functions.\n */\nexport type NgxListColumnValueFn = (record: any) => any;\n\nexport type NgxListFilterFn = (records: any[], value: any) => any[];\n\nexport type NgxListSortFn = (records: any[], sortKey: string) => any[];\n\n/**\n * Filter comparison types.\n */\nexport enum NgxListCompare {\n  eq = 1, // Use === for comparison.\n  neq, // Use !== for comparison.\n  gte, // Use >= for comparison.\n  gt, // Use > for comparison.\n  lt, // Use ;\n  /**\n   *  Required. The key that should be used as the id for each record.\n   */\n  idKey: string;\n  /**\n   *  Optional. The initial page, zero-based.\n   */\n  page?: number;\n  /**\n   * Optional. Initial records per page. Default 10. Pass 0 for no paging.\n   */\n  recordsPerPage?: number;\n  /**\n   *  Optional. The initial sort params.\n   */\n  sort?: {\n    /**\n     *  Indicates the column by which the list is sorted. Defaults to `idKey`.\n     */\n    key?: string;\n    /**\n     * Indicates whether the list  is displayed in reverse ('desc') order. Default false.\n     */\n    reversed?: boolean;\n  };\n  /**\n   * Optional. Initial filter values.\n   */\n  filterValues?: {[filterKey: string]: any};\n  /**\n   * A map of filters.\n   */\n  filters?: {[key: string]: NgxListFilterFn};\n  /**\n   * Optional. By default a sort function will be created for you with some sensible defaults.\n   */\n  sortFn?: NgxListSortFn;\n\n}\n\n\n\n\nexport interface INgxListParams {\n  /**\n   * The current page. Zero-based.\n   */\n page: number;\n /**\n  * The number of records per page. 0 for no paging.\n  */\n recordsPerPage: number;\n\n /**\n  * The sort params.\n  */\n sort: {\n   /**\n    * The key of the column, like 'name' or 'profile.firstName'\n    */\n   key: string;\n   /**\n    * Whether the list should be sorted in reverse (z-a) order\n    */\n   reversed: boolean;\n };\n /**\n  * The current values of the filters\n  */\n filterValues: {[key: string]: any};\n}\n\n\n/**\n * The end product of a list.\n */\n\nexport interface INgxListResult extends INgxListParams {\n  /**\n   * The records that belong on the current page.\n   */\n  records: any[];\n  /**\n   * The number of pages.\n   */\n  pageCount: number;\n  /**\n   * The total number of records in the list, after the current filters are applied.\n   */\n  recordCount: number;\n\n  /**\n   * The total number of records in the list, befor applying filters.\n   */\n  unfilteredRecordCount: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INgxListParams.html":{"url":"interfaces/INgxListParams.html","title":"interface - INgxListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INgxListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-list/src/lib/shared.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filterValues\n                                \n                                \n                                        page\n                                \n                                \n                                        recordsPerPage\n                                \n                                \n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterValues\n                                    \n                                \n                                \n                                    \n                                        filterValues:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current values of the filters\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current page. Zero-based.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordsPerPage\n                                    \n                                \n                                \n                                    \n                                        recordsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of records per page. 0 for no paging.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort params.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n\n\n/**\n * A function that, given a record, returns a value for purposes of\n * sorting, search or filtering. Used by the factory functions.\n */\nexport type NgxListColumnValueFn = (record: any) => any;\n\nexport type NgxListFilterFn = (records: any[], value: any) => any[];\n\nexport type NgxListSortFn = (records: any[], sortKey: string) => any[];\n\n/**\n * Filter comparison types.\n */\nexport enum NgxListCompare {\n  eq = 1, // Use === for comparison.\n  neq, // Use !== for comparison.\n  gte, // Use >= for comparison.\n  gt, // Use > for comparison.\n  lt, // Use ;\n  /**\n   *  Required. The key that should be used as the id for each record.\n   */\n  idKey: string;\n  /**\n   *  Optional. The initial page, zero-based.\n   */\n  page?: number;\n  /**\n   * Optional. Initial records per page. Default 10. Pass 0 for no paging.\n   */\n  recordsPerPage?: number;\n  /**\n   *  Optional. The initial sort params.\n   */\n  sort?: {\n    /**\n     *  Indicates the column by which the list is sorted. Defaults to `idKey`.\n     */\n    key?: string;\n    /**\n     * Indicates whether the list  is displayed in reverse ('desc') order. Default false.\n     */\n    reversed?: boolean;\n  };\n  /**\n   * Optional. Initial filter values.\n   */\n  filterValues?: {[filterKey: string]: any};\n  /**\n   * A map of filters.\n   */\n  filters?: {[key: string]: NgxListFilterFn};\n  /**\n   * Optional. By default a sort function will be created for you with some sensible defaults.\n   */\n  sortFn?: NgxListSortFn;\n\n}\n\n\n\n\nexport interface INgxListParams {\n  /**\n   * The current page. Zero-based.\n   */\n page: number;\n /**\n  * The number of records per page. 0 for no paging.\n  */\n recordsPerPage: number;\n\n /**\n  * The sort params.\n  */\n sort: {\n   /**\n    * The key of the column, like 'name' or 'profile.firstName'\n    */\n   key: string;\n   /**\n    * Whether the list should be sorted in reverse (z-a) order\n    */\n   reversed: boolean;\n };\n /**\n  * The current values of the filters\n  */\n filterValues: {[key: string]: any};\n}\n\n\n/**\n * The end product of a list.\n */\n\nexport interface INgxListResult extends INgxListParams {\n  /**\n   * The records that belong on the current page.\n   */\n  records: any[];\n  /**\n   * The number of pages.\n   */\n  pageCount: number;\n  /**\n   * The total number of records in the list, after the current filters are applied.\n   */\n  recordCount: number;\n\n  /**\n   * The total number of records in the list, befor applying filters.\n   */\n  unfilteredRecordCount: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INgxListResult.html":{"url":"interfaces/INgxListResult.html","title":"interface - INgxListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INgxListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-list/src/lib/shared.ts\n        \n\n            \n                Description\n            \n            \n                The end product of a list.\n\n            \n\n            \n                Extends\n            \n            \n                        INgxListParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageCount\n                                \n                                \n                                        recordCount\n                                \n                                \n                                        records\n                                \n                                \n                                        unfilteredRecordCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of pages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordCount\n                                    \n                                \n                                \n                                    \n                                        recordCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of records in the list, after the current filters are applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        records\n                                    \n                                \n                                \n                                    \n                                        records:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The records that belong on the current page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unfilteredRecordCount\n                                    \n                                \n                                \n                                    \n                                        unfilteredRecordCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of records in the list, befor applying filters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n\n\n/**\n * A function that, given a record, returns a value for purposes of\n * sorting, search or filtering. Used by the factory functions.\n */\nexport type NgxListColumnValueFn = (record: any) => any;\n\nexport type NgxListFilterFn = (records: any[], value: any) => any[];\n\nexport type NgxListSortFn = (records: any[], sortKey: string) => any[];\n\n/**\n * Filter comparison types.\n */\nexport enum NgxListCompare {\n  eq = 1, // Use === for comparison.\n  neq, // Use !== for comparison.\n  gte, // Use >= for comparison.\n  gt, // Use > for comparison.\n  lt, // Use ;\n  /**\n   *  Required. The key that should be used as the id for each record.\n   */\n  idKey: string;\n  /**\n   *  Optional. The initial page, zero-based.\n   */\n  page?: number;\n  /**\n   * Optional. Initial records per page. Default 10. Pass 0 for no paging.\n   */\n  recordsPerPage?: number;\n  /**\n   *  Optional. The initial sort params.\n   */\n  sort?: {\n    /**\n     *  Indicates the column by which the list is sorted. Defaults to `idKey`.\n     */\n    key?: string;\n    /**\n     * Indicates whether the list  is displayed in reverse ('desc') order. Default false.\n     */\n    reversed?: boolean;\n  };\n  /**\n   * Optional. Initial filter values.\n   */\n  filterValues?: {[filterKey: string]: any};\n  /**\n   * A map of filters.\n   */\n  filters?: {[key: string]: NgxListFilterFn};\n  /**\n   * Optional. By default a sort function will be created for you with some sensible defaults.\n   */\n  sortFn?: NgxListSortFn;\n\n}\n\n\n\n\nexport interface INgxListParams {\n  /**\n   * The current page. Zero-based.\n   */\n page: number;\n /**\n  * The number of records per page. 0 for no paging.\n  */\n recordsPerPage: number;\n\n /**\n  * The sort params.\n  */\n sort: {\n   /**\n    * The key of the column, like 'name' or 'profile.firstName'\n    */\n   key: string;\n   /**\n    * Whether the list should be sorted in reverse (z-a) order\n    */\n   reversed: boolean;\n };\n /**\n  * The current values of the filters\n  */\n filterValues: {[key: string]: any};\n}\n\n\n/**\n * The end product of a list.\n */\n\nexport interface INgxListResult extends INgxListParams {\n  /**\n   * The records that belong on the current page.\n   */\n  records: any[];\n  /**\n   * The number of pages.\n   */\n  pageCount: number;\n  /**\n   * The total number of records in the list, after the current filters are applied.\n   */\n  recordCount: number;\n\n  /**\n   * The total number of records in the list, befor applying filters.\n   */\n  unfilteredRecordCount: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxList.html":{"url":"classes/NgxList.html","title":"class - NgxList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-list/src/lib/list.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                setFilterValue\n                            \n                            \n                                setPage\n                            \n                            \n                                setRecordsPerPage\n                            \n                            \n                                setSort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    result$\n                                \n                                \n                                    result\n                                \n                                \n                                    records\n                                \n                                \n                                    page\n                                \n                                \n                                    recordsPerPage\n                                \n                                \n                                    sort\n                                \n                                \n                                    filterValues\n                                \n                                \n                                    pageCount\n                                \n                                \n                                    recordCount\n                                \n                                \n                                    unfilteredRecordCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: INgxListInit)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-list/src/lib/list.ts:25\n                            \n                        \n\n                \n                    \n                            Create a list.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        INgxListInit\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/list.ts:139\n                \n            \n\n\n            \n                \n                    Unsubscribes from the list source and cleans up.\nMake sure to call this in your component's ngOnDestroy method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFilterValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetFilterValue(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/list.ts:175\n                \n            \n\n\n            \n                \n                    Set a filter value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(page: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/list.ts:150\n                \n            \n\n\n            \n                \n                    Set the page to be displayed. Zero-based.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRecordsPerPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetRecordsPerPage(recordsPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/list.ts:159\n                \n            \n\n\n            \n                \n                    Set the recordsPerPage.\nPass 0 for unpaged (all records appear one page.)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recordsPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSort\n                        \n                        \n                    \n                \n            \n            \n                \nsetSort(sort: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/list.ts:168\n                \n            \n\n\n            \n                \n                    Set the sort key and whether the list should be reversed.\nPass true for reversed if you want the list to be sorted in descending (z-a) order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        result$\n                    \n                \n\n                \n                    \n                        getresult$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:64\n                                \n                            \n                    \n                        \n                                An observable of INgxListResult.\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n\n                \n                    \n                        getresult()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:71\n                                \n                            \n                    \n                        \n                                The latest INgxListResult.\n\n\n                                \n                                    Returns :         INgxListResult\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        records\n                    \n                \n\n                \n                    \n                        getrecords()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:78\n                                \n                            \n                    \n                        \n                                The records that belong to the current page.\n\n\n                                \n                                    Returns :     any[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        page\n                    \n                \n\n                \n                    \n                        getpage()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:87\n                                \n                            \n                    \n                        \n                                The current page number, zero-based. If there are records, this\nwill be between 0 and pageCount - 1.\nIf there are no records, it will be -1.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        recordsPerPage\n                    \n                \n\n                \n                    \n                        getrecordsPerPage()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:94\n                                \n                            \n                    \n                        \n                                The current recordsPerPage.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sort\n                    \n                \n\n                \n                    \n                        getsort()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:101\n                                \n                            \n                    \n                        \n                                The current sort column.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        filterValues\n                    \n                \n\n                \n                    \n                        getfilterValues()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:108\n                                \n                            \n                    \n                        \n                                The current filter values.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pageCount\n                    \n                \n\n                \n                    \n                        getpageCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:115\n                                \n                            \n                    \n                        \n                                The current number of pages.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        recordCount\n                    \n                \n\n                \n                    \n                        getrecordCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:123\n                                \n                            \n                    \n                        \n                                The number of records after applying filters.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unfilteredRecordCount\n                    \n                \n\n                \n                    \n                        getunfilteredRecordCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/list.ts:130\n                                \n                            \n                    \n                        \n                                The number of records before applying filters.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\n\nimport chunk from 'lodash/chunk';\nimport isFunction from 'lodash/isFunction';\n\nimport {\n  NgxListFilterFn,\n  NgxListSortFn,\n  INgxListResult,\n  INgxListParams,\n  INgxListInit\n} from './shared';\n\nimport { NgxListFnFactory } from './fn-factory';\n\n\nexport class NgxList {\n\n  private _src$: Observable;\n  private _idKey: string;\n  private _subscription: Subscription = null;\n  private _params$: BehaviorSubject;\n  private _result$: BehaviorSubject;\n  private _filters: {[key: string]: NgxListFilterFn};\n  private _sortFn: NgxListSortFn;\n\n\n  /**\n   * Create a list.\n   */\n  constructor(options: INgxListInit) {\n    this._src$ = options.src$;\n    this._idKey = options.idKey;\n    const params: INgxListParams = {page: null, recordsPerPage: null, sort: null,  filterValues: null};\n    params.page = parseInt(options.page as any, 10);\n    if (isNaN(params.page) || params.page  {\n        this._update(...results);\n      });\n\n  }\n\n  /**\n   * An observable of {@link INgxListResult}.\n   */\n  get result$(): Observable {\n    return this._result$.asObservable();\n  }\n\n  /**\n   * The latest {@link INgxListResult}.\n   */\n  get result(): INgxListResult {\n    return this._result$.value;\n  }\n\n  /**\n   * The records that belong to the current page.\n   */\n  get records(): any[] {\n    return this.result.records;\n  }\n\n  /**\n   * The current page number, zero-based. If there are records, this\n   * will be between `0` and `[pageCount]{@link NgxList#pageCount} - 1`.\n   * If there are no records, it will be `-1`.\n   */\n  get page(): number {\n    return this.result.page;\n  }\n\n  /**\n   * The current recordsPerPage.\n   */\n  get recordsPerPage(): number {\n    return this.result.recordsPerPage;\n  }\n\n  /**\n   * The current sort column.\n   */\n  get sort(): {key: string, reversed: boolean} {\n    return Object.assign({}, this._params$.value.sort);\n  }\n\n  /**\n   * The current filter values.\n   */\n  get filterValues(): {[key: string]: any} {\n    return Object.assign({}, this._params$.value.filterValues);\n  }\n\n  /**\n   * The current number of pages.\n   */\n  get pageCount(): number {\n    return this.result.pageCount;\n  }\n\n\n  /**\n   * The number of records after applying filters.\n   */\n  get recordCount(): number {\n    return this.result.recordCount;\n  }\n\n  /**\n   * The number of records before applying filters.\n   */\n  get unfilteredRecordCount(): number {\n    return this.result.unfilteredRecordCount;\n  }\n\n\n  /**\n   * Unsubscribes from the list source and cleans up.\n   * Make sure to call this in your component's `ngOnDestroy` method.\n   */\n  destroy(): void {\n    this._subscription.unsubscribe();\n    this._params$.complete();\n    this._result$.complete();\n\n  }\n\n\n  /**\n   * Set the page to be displayed. Zero-based.\n   */\n  setPage(page: number): void {\n    page = Math.max(0, page);\n    this._params$.next(Object.assign({}, this._params$.value, {page}));\n  }\n\n  /**\n   * Set the recordsPerPage.\n   * Pass `0` for unpaged (all records appear one page.)\n   */\n  setRecordsPerPage(recordsPerPage: number): void {\n    recordsPerPage = Math.max(0, recordsPerPage);\n    this._params$.next(Object.assign({}, this._params$.value, {recordsPerPage, page: 0}));\n  }\n\n  /**\n   * Set the sort key and whether the list should be reversed.\n   * Pass true for reversed if you want the list to be sorted in descending (z-a) order\n   */\n  setSort(sort: {key: string, reversed: boolean}): void {\n    this._params$.next(Object.assign({}, this._params$.value, {sort, page: 0}));\n  }\n\n  /**\n   * Set a filter value.\n   */\n  setFilterValue(key: string, value: any): void {\n    const params = Object.assign({}, this._params$.value);\n    params.filterValues[key] = value;\n    params.page = 0;\n    this._params$.next(params);\n  }\n\n\n  /**\n   * Update the list when...\n   * (1) the source records have changed,\n   * (2) the list params have changed.\n   * @param  srcRecords The latest source records.\n   * @param  listParams The latest list params.\n   */\n  private _update(srcRecords: any[], listParams: INgxListParams) {\n\n    const unfilteredRecordCount = srcRecords.length;\n    let results = srcRecords.slice(0);\n    Object.keys(this._filters).forEach(key => {\n      const fn = this._filters[key];\n      results = fn(results, listParams.filterValues[key]);\n    });\n    results = this._sortFn(results, listParams.sort.key);\n    if (listParams.sort.reversed) {\n      results.reverse();\n    }\n    const recordsPerPage = Math.max(0, listParams.recordsPerPage);\n    const recordCount = results.length;\n    const pages = recordsPerPage > 0 ? chunk(results, recordsPerPage) : [results];\n    const pageCount = pages.length;\n    const page = Math.min(pageCount - 1, Math.max(0, listParams.page));\n    const records = pageCount > 0 ? pages[page] : [];\n    const result: INgxListResult = Object.assign({}, listParams, {\n      records, recordCount, pageCount,  unfilteredRecordCount,\n      // add these in because they may have changed...\n      recordsPerPage, page\n    });\n    this._result$.next(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxListBoostrapPaginationComponent.html":{"url":"components/NgxListBoostrapPaginationComponent.html","title":"component - NgxListBoostrapPaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxListBoostrapPaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-list-bootstrap-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                lastPage\n                            \n                            \n                                nextDisabled\n                            \n                            \n                                pageNumbers\n                            \n                            \n                                prevDisabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrapSize\n                            \n                            \n                                buttonClass\n                            \n                            \n                                list\n                            \n                            \n                                options\n                            \n                            \n                                selectId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    normalizedOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultOptions: INgxListBoostrapOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultOptions\n                                                  \n                                                        \n                                                                        INgxListBoostrapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bootstrapSize\n                    \n                \n                \n                    \n                        Type :     \"sm\" | \"lg\"\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClass\n                    \n                \n                \n                    \n                        Default value : 'btn btn-outline-secondary'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         NgxList\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         INgxListBoostrapOptions\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateControl\n                        \n                        \n                    \n                \n            \n            \n                \nupdateControl(result: INgxListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                INgxListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        normalizedOptions\n                    \n                \n\n                \n                    \n                        getnormalizedOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts:50\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input, Optional, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxList } from '../../list';\nimport { INgxListResult } from '../../shared';\nimport {\n  INgxListBoostrapOptions,\n  NGX_LIST_BOOTSTRAP_OPTIONS,\n  NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS\n} from '../options';\n\n@Component({\n  selector: 'ngx-list-bootstrap-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class NgxListBoostrapPaginationComponent implements OnInit, OnDestroy {\n  private _ngUnsubscribe: Subject = new Subject();\n  @Input() selectId: string;\n  @Input() list: NgxList;\n  @Input() buttonClass = 'btn btn-outline-secondary';\n  @Input() bootstrapSize: 'sm' | 'lg' = null;\n  @Input() options: INgxListBoostrapOptions = null;\n  control: FormControl;\n  pageNumbers: number[] = [];\n  prevDisabled = true;\n  nextDisabled = true;\n  lastPage = 0;\n  constructor(\n    @Optional() @Inject(NGX_LIST_BOOTSTRAP_OPTIONS) private defaultOptions: INgxListBoostrapOptions\n  ) { }\n\n  ngOnInit() {\n    this.control = new FormControl(0);\n    this.control.valueChanges\n      .pipe(takeUntil(this._ngUnsubscribe))\n      .subscribe(val => this.list.setPage(val));\n    this.updateControl(this.list.result);\n    this.list.result$\n      .pipe(takeUntil(this._ngUnsubscribe))\n      .subscribe(result => this.updateControl(result));\n  }\n\n  ngOnDestroy() {\n    this._ngUnsubscribe.next();\n    this._ngUnsubscribe.complete();\n  }\n\n  get normalizedOptions(): INgxListBoostrapOptions {\n    return Object.assign(\n      {},\n      NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS,\n      this.defaultOptions || {},\n      this.options || {}\n    );\n  }\n\n  updateControl(result: INgxListResult) {\n    const pageNumbers: number[] = [];\n    for (let n = 0; n = result.page;\n    this.nextDisabled = result.page >= this.lastPage;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    {{(n + 1)}}\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./pagination.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{(n + 1)}}              '\n    var COMPONENTS = [{'name': 'NgxListBoostrapPaginationComponent', 'selector': 'ngx-list-bootstrap-pagination'},{'name': 'NgxListBoostrapRppComponent', 'selector': 'ngx-list-bootstrap-rpp'},{'name': 'NgxListBootstrapSortComponent', 'selector': 'ngx-list-bootstrap-sort'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxListBoostrapPaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxListBoostrapRppComponent.html":{"url":"components/NgxListBoostrapRppComponent.html","title":"component - NgxListBoostrapRppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxListBoostrapRppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-list-bootstrap-rpp\n            \n\n            \n                styleUrls\n                ./rpp.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rpp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrapSize\n                            \n                            \n                                list\n                            \n                            \n                                options\n                            \n                            \n                                selectId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    normalizedOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultOptions: INgxListBoostrapOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultOptions\n                                                  \n                                                        \n                                                                        INgxListBoostrapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bootstrapSize\n                    \n                \n                \n                    \n                        Type :     \"sm\" | \"lg\"\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         NgxList\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         INgxListBoostrapOptions\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateControl\n                        \n                        \n                    \n                \n            \n            \n                \nupdateControl(result: INgxListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                INgxListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        normalizedOptions\n                    \n                \n\n                \n                    \n                        getnormalizedOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input, Optional, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxList } from '../../list';\nimport { INgxListResult } from '../../shared';\nimport {\n  INgxListBoostrapOptions,\n  NGX_LIST_BOOTSTRAP_OPTIONS,\n  NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS\n} from '../options';\n\n\n@Component({\n  selector: 'ngx-list-bootstrap-rpp',\n  templateUrl: './rpp.component.html',\n  styleUrls: ['./rpp.component.css']\n})\nexport class NgxListBoostrapRppComponent implements OnInit, OnDestroy {\n  private _ngUnsubscribe: Subject = new Subject();\n  @Input() selectId: string;\n  @Input() list: NgxList;\n  @Input() bootstrapSize: 'sm' | 'lg' = null;\n  @Input() options: INgxListBoostrapOptions = null;\n  control: FormControl;\n\n  constructor(\n    @Optional() @Inject(NGX_LIST_BOOTSTRAP_OPTIONS) private defaultOptions: INgxListBoostrapOptions\n  ) { }\n\n  ngOnInit() {\n    this.control = new FormControl(10);\n    this.control.valueChanges\n      .pipe(takeUntil(this._ngUnsubscribe))\n      .subscribe(val => this.list.setRecordsPerPage(val));\n    this.updateControl(this.list.result);\n    this.list.result$\n      .pipe(takeUntil(this._ngUnsubscribe))\n      .subscribe(result => this.updateControl(result));\n  }\n\n  ngOnDestroy() {\n    this._ngUnsubscribe.next();\n    this._ngUnsubscribe.complete();\n  }\n\n  get normalizedOptions(): INgxListBoostrapOptions {\n    return Object.assign(\n      {},\n      NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS,\n      this.defaultOptions || {},\n      this.options || {}\n    );\n  }\n\n  updateControl(result: INgxListResult) {\n    this.control.setValue(result.recordsPerPage, {emitEvent: false});\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{n \n  \n\n\n    \n\n    \n                \n                    ./rpp.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{n   '\n    var COMPONENTS = [{'name': 'NgxListBoostrapPaginationComponent', 'selector': 'ngx-list-bootstrap-pagination'},{'name': 'NgxListBoostrapRppComponent', 'selector': 'ngx-list-bootstrap-rpp'},{'name': 'NgxListBootstrapSortComponent', 'selector': 'ngx-list-bootstrap-sort'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxListBoostrapRppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxListBootstrapModule.html":{"url":"modules/NgxListBootstrapModule.html","title":"module - NgxListBootstrapModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxListBootstrapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxListBootstrapModule\n\n\n\ncluster_NgxListBootstrapModule_declarations\n\n\n\ncluster_NgxListBootstrapModule_exports\n\n\n\n\nNgxListBoostrapPaginationComponent\n\nNgxListBoostrapPaginationComponent\n\n\n\nNgxListBootstrapModule\n\nNgxListBootstrapModule\n\nNgxListBootstrapModule -->\n\nNgxListBoostrapPaginationComponent->NgxListBootstrapModule\n\n\n\n\n\nNgxListBoostrapRppComponent\n\nNgxListBoostrapRppComponent\n\nNgxListBootstrapModule -->\n\nNgxListBoostrapRppComponent->NgxListBootstrapModule\n\n\n\n\n\nNgxListBootstrapSortComponent\n\nNgxListBootstrapSortComponent\n\nNgxListBootstrapModule -->\n\nNgxListBootstrapSortComponent->NgxListBootstrapModule\n\n\n\n\n\nNgxListBoostrapPaginationComponent \n\nNgxListBoostrapPaginationComponent \n\nNgxListBoostrapPaginationComponent  -->\n\nNgxListBootstrapModule->NgxListBoostrapPaginationComponent \n\n\n\n\n\nNgxListBoostrapRppComponent \n\nNgxListBoostrapRppComponent \n\nNgxListBoostrapRppComponent  -->\n\nNgxListBootstrapModule->NgxListBoostrapRppComponent \n\n\n\n\n\nNgxListBootstrapSortComponent \n\nNgxListBootstrapSortComponent \n\nNgxListBootstrapSortComponent  -->\n\nNgxListBootstrapModule->NgxListBootstrapSortComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-list/src/lib/bootstrap/bootstrap.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxListBoostrapPaginationComponent\n                        \n                        \n                            NgxListBoostrapRppComponent\n                        \n                        \n                            NgxListBootstrapSortComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxListBoostrapPaginationComponent\n                        \n                        \n                            NgxListBoostrapRppComponent\n                        \n                        \n                            NgxListBootstrapSortComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxListBoostrapPaginationComponent } from './pagination/pagination.component';\nimport { NgxListBoostrapRppComponent } from './rpp/rpp.component';\nimport { NgxListBootstrapSortComponent } from './sort/sort.component';\n\n@NgModule({\n  declarations: [\n    NgxListBoostrapPaginationComponent,\n    NgxListBoostrapRppComponent,\n    NgxListBootstrapSortComponent,\n  ],\n  exports: [\n    NgxListBoostrapPaginationComponent,\n    NgxListBoostrapRppComponent,\n    NgxListBootstrapSortComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ]\n})\nexport class NgxListBootstrapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxListBootstrapSortComponent.html":{"url":"components/NgxListBootstrapSortComponent.html","title":"component - NgxListBootstrapSortComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxListBootstrapSortComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-list-bootstrap-sort\n            \n\n            \n                styleUrls\n                ./sort.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reversed\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                            \n                                updateControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultReversed\n                            \n                            \n                                key\n                            \n                            \n                                list\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    normalizedOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultOptions: INgxListBoostrapOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultOptions\n                                                  \n                                                        \n                                                                        INgxListBoostrapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultReversed\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         NgxList\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         INgxListBoostrapOptions\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            select\n                        \n                        \n                    \n                \n            \n            \n                \nselect()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateControl\n                        \n                        \n                    \n                \n            \n            \n                \nupdateControl(result: INgxListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                INgxListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reversed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        normalizedOptions\n                    \n                \n\n                \n                    \n                        getnormalizedOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input, Optional, Inject } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxList } from '../../list';\nimport { INgxListResult } from '../../shared';\nimport {\n  INgxListBoostrapOptions,\n  NGX_LIST_BOOTSTRAP_OPTIONS,\n  NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS\n} from '../options';\n\n@Component({\n  selector: 'ngx-list-bootstrap-sort',\n  templateUrl: './sort.component.html',\n  styleUrls: ['./sort.component.scss']\n})\nexport class NgxListBootstrapSortComponent implements OnInit, OnDestroy {\n  private _ngUnsubscribe: Subject = new Subject();\n  @Input() list: NgxList;\n  @Input() key: string;\n  @Input() defaultReversed = false;\n  @Input() options: INgxListBoostrapOptions = null;\n  selected = false;\n  reversed = false;\n  constructor(\n    @Optional() @Inject(NGX_LIST_BOOTSTRAP_OPTIONS) private defaultOptions: INgxListBoostrapOptions\n  ) { }\n\n  ngOnInit() {\n    this.list.result$\n      .pipe(takeUntil(this._ngUnsubscribe))\n      .subscribe(result => this.updateControl(result));\n  }\n\n  ngOnDestroy() {\n    this._ngUnsubscribe.next();\n    this._ngUnsubscribe.complete();\n  }\n\n  get normalizedOptions(): INgxListBoostrapOptions {\n    return Object.assign(\n      {},\n      NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS,\n      this.defaultOptions || {},\n      this.options || {}\n    );\n  }\n\n  select() {\n    let reversed = this.defaultReversed;\n    if (this.selected) {\n      reversed = ! this.reversed;\n    }\n    this.list.setSort({key: this.key, reversed});\n  }\n\n  updateControl(result: INgxListResult) {\n    this.selected = this.key === result.sort.key;\n    if (this.selected) {\n      this.reversed = result.sort.reversed;\n    } else {\n      this.reversed = false;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n    {{normalizedOptions.sortDescLabel}}\n  \n  \n    \n    {{normalizedOptions.sortAscLabel}}\n  \n\n\n    \n\n    \n                \n                    ./sort.component.scss\n                \n                @import \"~bootstrap/scss/functions\";\n@import \"~bootstrap/scss/variables\";\n\n.ngx-bootstrap-sort {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: $gray-500;\n  &.active, &:hover, &:active {\n    color: $primary;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{normalizedOptions.sortDescLabel}}            {{normalizedOptions.sortAscLabel}}  '\n    var COMPONENTS = [{'name': 'NgxListBoostrapPaginationComponent', 'selector': 'ngx-list-bootstrap-pagination'},{'name': 'NgxListBoostrapRppComponent', 'selector': 'ngx-list-bootstrap-rpp'},{'name': 'NgxListBootstrapSortComponent', 'selector': 'ngx-list-bootstrap-sort'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxListBootstrapSortComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxListFnFactory.html":{"url":"classes/NgxListFnFactory.html","title":"class - NgxListFnFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxListFnFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-list/src/lib/fn-factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                comparisonFilter\n                            \n                            \n                                    Static\n                                dotKeys\n                            \n                            \n                                    Static\n                                getColumnValueFn\n                            \n                            \n                                    Static\n                                ignoreFilterWhen\n                            \n                            \n                                    Static\n                                keySearchValue\n                            \n                            \n                                    Static\n                                recordMatchesSearch\n                            \n                            \n                                    Static\n                                searchFilter\n                            \n                            \n                                    Static\n                                sortFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            comparisonFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comparisonFilter(options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:194\n                \n            \n\n\n            \n                \n                    Factory for a function that filters the records by comparing a single column against a value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxListFilterFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            dotKeys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dotKeys(x: any, ignoredKeys: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:33\n                \n            \n\n\n            \n                \n                    A helper function to get the dot-notated keys from an object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    ignoredKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getColumnValueFn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColumnValueFn(k: string, valueFns: literal type, caseSensitive: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:55\n                \n            \n\n\n            \n                \n                    A helper method to get the value function for a column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    valueFns\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    caseSensitive\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxListColumnValueFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ignoreFilterWhen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ignoreFilterWhen(filterValue: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:23\n                \n            \n\n\n            \n                \n                    The default function for deciding when NOT to run a particular\nfilter, based on the value of the filter. By default, this\nis when the filter value is undefined, null or an empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            keySearchValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    keySearchValue(record: any, key: string, valueFns: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valueFns\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            recordMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recordMatchesSearch(record: any, casedSearch: string, caseSensitive: boolean, ignoredKeys: string[], valueFns: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    casedSearch\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    caseSensitive\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ignoredKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valueFns\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            searchFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchFilter(options?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:167\n                \n            \n\n\n            \n                \n                    Search filter factory. Pass an options object containing...\n- caseSensitive?\n    Optional. Default false -- string values will be compared case-insensitively.\n- ignoredKeys?\n    Optional. By default all of the scalar keys in an object are inspected. Pass an\n    array of string keys to ignore single or multiple paths\n- valueFns?\n    Optional. Use this if you want to mess with the values before matching, like\n    formatting dates.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxListFilterFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortFn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortFn(options?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-list/src/lib/fn-factory.ts:83\n                \n            \n\n\n            \n                \n                    A factory that returns an instance of  NgxListSortFn.\nPass on optional options object containing...\n- fallbackSortColumn?\n    Optional. The key to sort by if two records are the same by the current sort key\n- caseSensitive?\n    Optional. Default false: string columns will be sorted case-insensitively.\n- valueFns?\n    Optional. Use this if you want to mess with the values for sorting,\n    or add a sort key that does not exist in your raw records.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxListSortFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import sortBy from 'lodash/sortBy';\nimport get from 'lodash/get';\nimport trim from 'lodash/trim';\nimport toString from 'lodash/toString';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isFunction from 'lodash/isFunction';\n\nimport {\n  NgxListCompare,\n  NgxListColumnValueFn,\n  NgxListSortFn,\n  NgxListFilterFn\n} from './shared';\n\nexport class NgxListFnFactory {\n\n  /**\n   * The default function for deciding when NOT to run a particular\n   * filter, based on the value of the filter. By default, this\n   * is when the filter value is `undefined`, `null` or an empty string.\n   *\n   */\n  static ignoreFilterWhen(filterValue: any): boolean {\n    return filterValue === null ||\n      filterValue === undefined ||\n      ('string' === typeof filterValue && 0 === trim(filterValue).length);\n  }\n\n\n  /**\n   * A helper function to get the dot-notated keys from an object.\n   */\n  static dotKeys(x: any, ignoredKeys: string[] = []): string[] {\n    const dotKeys: string[] = [];\n    const recurse = (y: any, currentKeys: string[] = []) => {\n      const dotKey = currentKeys.length > 0 ? currentKeys.join('.') : null;\n      const ignored = (dotKey === null) ? false : ignoredKeys.filter(iK => dotKey.indexOf(iK) === 0).length > 0;\n      if (ignored) {\n        return;\n      }\n      if (dotKey) {\n        dotKeys.push(dotKey);\n      }\n      if (typeof y === 'object' && null !== y) {\n        Object.keys(y).forEach(k => recurse(y[k], [...currentKeys, k]));\n      }\n    };\n    recurse(x);\n    return dotKeys;\n  }\n\n  /**\n   * A helper method to get the value function for a column.\n   */\n  static getColumnValueFn(\n    k: string,\n    valueFns: {[key: string]: NgxListColumnValueFn} = {},\n    caseSensitive: boolean\n  ): NgxListColumnValueFn {\n    if (isFunction(valueFns[k])) {\n      return valueFns[k];\n    }\n    return (record) => {\n      const value = get(record, k);\n      if ((! caseSensitive) && typeof value === 'string') {\n        return (value as string).toLowerCase();\n      }\n      return value;\n    };\n  }\n\n  /**\n   * A factory that returns an instance of  NgxListSortFn.\n   * Pass on optional options object containing...\n   * - fallbackSortColumn?\n   *    Optional. The key to sort by if two records are the same by the current sort key\n   * - caseSensitive?\n   *    Optional. Default false: string columns will be sorted case-insensitively.\n   * - valueFns?\n   *    Optional. Use this if you want to mess with the values for sorting,\n   *    or add a sort key that does not exist in your raw records.\n   */\n  static sortFn(options?: {\n    fallbackSortColumn?: string,\n    caseSensitive?: boolean,\n    valueFns?: {[key: string]: NgxListColumnValueFn}\n  }): NgxListSortFn {\n    options = options || {};\n    const fallbackSortColumn: string = options.fallbackSortColumn || null;\n    const caseSensitive = options.caseSensitive === true;\n    const valueFns = options.valueFns || {};\n    const fn: NgxListSortFn = (records: any[], sortColumn: string): any[] => {\n      const sortFns: NgxListColumnValueFn[] = [];\n      if (sortColumn) {\n        sortFns.push(NgxListFnFactory.getColumnValueFn(sortColumn, valueFns, caseSensitive));\n      }\n      if (fallbackSortColumn && fallbackSortColumn !== sortColumn) {\n        sortFns.push(NgxListFnFactory.getColumnValueFn(fallbackSortColumn, valueFns, caseSensitive));\n      }\n\n      const sorted = sortBy(records, sortFns) as  any[];\n      return sorted;\n    };\n    return fn;\n  }\n\n\n  static keySearchValue(\n    record: any,\n    key: string,\n    valueFns: {[key: string]: NgxListColumnValueFn}\n  ): string {\n    if (isFunction(valueFns[key])) {\n      return toString(valueFns[key](record));\n    }\n    const value = get(record, key, '');\n    if (isPlainObject(value)) {\n      return '';\n    }\n    if (isFunction(value)) {\n      return '';\n    }\n    if (Array.isArray(value)) {\n      return '';\n    }\n    if ('boolean' === typeof value) {\n      return '';\n    }\n    if ('number' === typeof value && isNaN(value)) {\n      return '';\n    }\n    return toString(value);\n\n  }\n\n  static recordMatchesSearch(\n    record: any,\n    casedSearch: string,\n    caseSensitive: boolean,\n    ignoredKeys: string[],\n    valueFns: {[key: string]: NgxListColumnValueFn}\n  ): boolean {\n    const keys = NgxListFnFactory.dotKeys(record, ignoredKeys);\n    let matched = false;\n    while ((! matched) && (keys.length > 0)) {\n      const k = keys.shift();\n      const value: string = NgxListFnFactory.keySearchValue(record, k, valueFns);\n      const casedValue: string = caseSensitive ? value : value.toLowerCase();\n      if (casedValue.indexOf(casedSearch) > -1) {\n        matched = true;\n      }\n    }\n    return matched;\n  }\n\n  /**\n   * Search filter factory. Pass an options object containing...\n   * - caseSensitive?\n   *    Optional. Default false -- string values will be compared case-insensitively.\n   * - ignoredKeys?\n   *    Optional. By default all of the scalar keys in an object are inspected. Pass an\n   *    array of string keys to ignore single or multiple paths\n   * - valueFns?\n   *    Optional. Use this if you want to mess with the values before matching, like\n   *    formatting dates.\n   */\n  static searchFilter(options?: {\n    caseSensitive?: boolean,\n    ignoredKeys?: string[],\n    valueFns?: {[key: string]: NgxListColumnValueFn}\n  }): NgxListFilterFn {\n    options = isPlainObject(options) ? options : {};\n    const caseSensitive: boolean = options.caseSensitive === true;\n    const ignoredKeys = options.ignoredKeys || [];\n    const valueFns = options.valueFns || {};\n    const fn = (records: any[], filterValue: any): any[] => {\n      let search: string = ('string' === typeof filterValue) ? trim(filterValue) : '';\n      if (search.length === 0) {\n        return records.slice();\n      }\n      if (! caseSensitive) {\n        search = search.toLowerCase();\n      }\n      return records.filter((record: any) => {\n        return NgxListFnFactory.recordMatchesSearch(record, search, caseSensitive, ignoredKeys, valueFns);\n      });\n    };\n    return fn;\n  }\n\n  /**\n   * Factory for a function that filters the records by comparing a single column against a value.\n   */\n  static comparisonFilter(options: {\n    value: string | NgxListColumnValueFn;\n    compare?: NgxListCompare;\n    ignoreFilterWhen?: (filterValue: any) => boolean;\n  }): NgxListFilterFn  {\n    const compare = undefined === options.compare ? NgxListCompare.eq : options.compare;\n    const ignoreFilterWhen: (filterValue: any) => boolean = isFunction(options.ignoreFilterWhen) ?\n      options.ignoreFilterWhen : NgxListFnFactory.ignoreFilterWhen;\n    const valueFn: NgxListColumnValueFn = isFunction(options.value) ?\n      options.value : (record) => get(record, toString(options.value));\n\n    const fn: NgxListFilterFn = (records: any[], filterValue: any): any[] => {\n      if (ignoreFilterWhen(filterValue)) {\n        return records.slice(0);\n      }\n      return records.filter((record: any) => {\n        const recordValue = valueFn(record);\n        switch (compare) {\n          case NgxListCompare.eq: return recordValue === filterValue;\n          case NgxListCompare.neq: return recordValue !== filterValue;\n          case NgxListCompare.gt: return recordValue > filterValue;\n          case NgxListCompare.gte: return recordValue >= filterValue;\n          case NgxListCompare.lt: return recordValue \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-list/src/lib/bootstrap/options.ts\n            \n            interface\n            INgxListBoostrapOptions\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/bootstrap/options.ts\n            \n            variable\n            NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/bootstrap/options.ts\n            \n            variable\n            NGX_LIST_BOOTSTRAP_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/bootstrap/pagination/pagination.component.ts\n            \n            component\n            NgxListBoostrapPaginationComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/bootstrap/rpp/rpp.component.ts\n            \n            component\n            NgxListBoostrapRppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/bootstrap/sort/sort.component.ts\n            \n            component\n            NgxListBootstrapSortComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/fn-factory.ts\n            \n            class\n            NgxListFnFactory\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/list.ts\n            \n            class\n            NgxList\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/shared.ts\n            \n            interface\n            INgxListInit\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/shared.ts\n            \n            interface\n            INgxListParams\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                projects/ngx-list/src/lib/shared.ts\n            \n            interface\n            INgxListResult\n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            @angular/common : ^7.2.15\n        \n            @angular/compiler : ^7.2.15\n        \n            @angular/core : ^7.2.15\n        \n            @angular/forms : ^7.2.15\n        \n            @angular/platform-browser : ^7.2.15\n        \n            @angular/platform-browser-dynamic : ^7.2.15\n        \n            @angular/router : ^7.2.15\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            jquery : ^3.4.0\n        \n            lodash : ^4.17.11\n        \n            ngx-moment : ^3.4.0\n        \n            popper.js : ^1.14.7\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxListCompare   (projects/.../shared.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-list/src/lib/shared.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxListCompare\n                    \n                \n                    \n                        \n                            Filter comparison types.\n\n                        \n                    \n                        \n                            \n                                 eq\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 neq\n                            \n                        \n                        \n                            \n                                 gte\n                            \n                        \n                        \n                            \n                                 gt\n                            \n                        \n                        \n                            \n                                 lt\n                            \n                        \n                        \n                            \n                                 lte\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@nowzoo/ngx-list\nPaginated, sorted and filtered lists from observables for Angular. The base library is agnostic as to styling and controls; a  set of Bootstrap 4 controls is available as a separately imported module.\nDemo | Demo Code\nQuick Start\nInstall the library and Lodash.\nbash\nnpm i -S @nowzoo/ngx-list lodash\nProblem with depending on Lodash? Read this note.\nIf you are planning on using the Bootstrap 4 components, you need to include Bootstrap css somewhere in your build process. None of the Bootstrap components depend on Bootstrap javascript.\nBasic Usage\nThe base library does not expose any components or services, so there's no module to import. There's just the NgxList class that you import and instantiate in your component code...\n```ts\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgxList, NgxListResult } from '@nowzoo/ngx-list';\nimport { MyDataService } from '../my-data.service';\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styles: []\n})\nexport class DemoComponent implements OnInit, OnDestroy {\n  list: NgxList;\n  result: NgxListResult = null;\n  constructor(\n    private dataService: MyDataService\n  ) { }\n  ngOnInit() {\n    // assuming dataService.data$ is an observable\n    // of an array of records\n    this.list = new NgxList({\n      src$: this.dataService.data$, //required\n      idKey: 'id' //required\n    });\n    this.list.results$.subscribe(result => this.result = result);\n  }\n  ngOnDestroy() {\n    this.list.destroy();\n  }\n}\n```\n```html\n\n{{result | json}}\n```\nResult:\njson\n{\n  \"page\": 0,\n  \"recordsPerPage\": 10,\n  \"sort\": {\n    \"key\": \"id\",\n    \"reversed\": false\n  },\n  \"filterValues\": {},\n  \"recordCount\": 88,\n  \"pageCount\": 9,\n  \"unfilteredRecordCount\": 88,\n  \"records\": [...]\n}\nAt this point, result.records is the array of sorted and filtered records from your src$ observable that belong on the current page.\nIt's up to you to layout the records, for example in a table...\n```html\n\n      ...\n    \n  \n    \n  \n\n```\n\nBootstrap Components\nThe library provides a set of Bootstrap themed components for sorting and pagination.\n\nNgxListBoostrapPaginationComponent: An input group with prev/next and first/last buttons, and a dropdown with page numbers.\nNgxListBoostrapRppComponent: A dropdown to set the recordsPerPage property of a list.\nNgxListBootstrapSortComponent: Sort a list by a key.\n\nTo use these components import the module:\nts\nimport { NgxListBootstrapModule } from '@nowzoo/ngx-list';\n@NgModule({\n  imports: [\n    NgxListBootstrapModule,\n  ]\n})\nexport class MyModule { }\nComponent Usage\nts\n// component...\nngOnInit() {\n  this.list = new NgxList({src$: mySource, idKey: 'id'})\n}\n```html\n\n\n\n\n\n\n      ...\n    \n  \n    \n      \n        ID\n      \n      \n        Name\n      \n    \n  \n  \n    \n  \n\n```\n\nSee the Bootstrap Components API for more options.\nAPI\nNgxList\nThe main class.\nts\nconst list = new NgxList(init);\nThe NgxList constructor takes an initializing object in the shape of INgxListInit. The only required properties are src$ and idKey. All other properties are optional.\nInterface INgxListInit\n\nsrc$: Observable Required. An observable of records from your data source.\nidKey: string Required. The key of some unique record identifier. This is used as the fallback sort key.\npage?: number Optional. The initial page. Default 0.\nrecordsPerPage?: number Optional. The initial recordsPerPage. Default 10.\nsort?: {key?: string, reversed?: boolean} Optional. The initial sort params.\nkey defaults to whatever you passed as idKey (see above)\nreversed defaults to false\n\n\nfilterValues?: {[filterKey: string]: any} Optional. The initial values for the filters. For example, you could pass {search: 'foo'} if initializing the list from a query param.\nfilters?: {[filterKey: string]: NgxListFilterFn} Optional. A map of filter functions. You can roll your own NgxListFilterFn or use the factories:\nNgxListFnFactory.searchFilter\nNgxListFnFactory.comparisonFilter.\n\n\nsortFn?: NgxListSortFn Optional. If nothing is passed, the list creates a sort function with some sensible defaults. You can roll your own function of type NgxListSortFn, use the NgxListFnFactory.sortFn factory.\n\nNgxList Properties\n\nresult$:  Observable The list result as an observable. See INgxListResult.\nresult: INgxListResult The latest list result.\n\nAdditionally, the class exposes the individual properties of the latest result:\n\nrecords: any[] The records that belong on the current page.\nrecordCount: number The number of records that match the current filters.\nunfilteredRecordCount: number The total number of records, before filtering.\npageCount: number The number of pages.\npage: number The current page. If there are records, this will be between 0 and pageCount - 1.\nrecordsPerPage: number The value used to page the result.\nsort: {key: string, reversed: boolean} The parameters used to sort the list.\nfilterValues: {[key: string]: any} The filter values used to filter the result.\n\nNgxList Methods\n\nsetPage(page: number): void Set the page number. Note that whatever you pass here will be eventually be constrained to between 0 and pageCount - 1.\nsetRecordsPerPage(recordsPerPage: number): void Pass 0 for no paging.\nsetSort(sort: {key: string, reversed: boolean}): void Set the sort params. key can use dot notation to access nested properties of your records. If reversed is true, then the list will be sorted in descending (z-a) order.\nsetFilterValue(key: string, value: any): void Set the value of a particular filter, e.g. list.setFilterValue('search', 'foo bar')\n\nNgxListFnFactory\nA class with static methods for creating filter and sort functions.  \nNgxListFnFactory.sortFn\nStatic method to create a sort function of type NgxListSortFn. NgxList uses this to create the default sort function. You can use this factory to replace the default sort function, or roll your own.\nstatic sortFn(options?): NgxListSortFn\noptions can be an object with the following properties:\n\nfallbackSortColumn?: string Optional. The key to sort by if two records are the same by the current sort key.\ncaseSensitive?: boolean Optional. Default false. If true, record keys containing strings will be sorted case-sensitively.\nvalueFns?: {[key: string]: NgxListColumnValueFn} Optional. Use this if you want to mess with the values for sorting, or add a sort key that does not exist in your raw records.\n\nNgxListFnFactory.searchFilter\nStatic method to create a search filter of type NgxListFilterFn. Use this to create a search filter top pass to NgxList:\nts\nconst list = new NgxList({\n  src$: myDataSrc$,\n  idKey: 'id',\n  filters: {\n    // using the default options...\n    search: NgxListFnFactory.searchFilter()\n  }\n});\nstatic searchFilter(options?): NgxListFilterFn\noptions can be an object with the following properties:\n\ncaseSensitive?: boolean Optional. Default false. Set to true if you want to match string values  case-sensitively.\nignoredKeys?: string[] Optional. By default the function will search all of the scalar keys in an object, including deeply nested ones. Pass an array of dot-notated keys to ignore single or multiple paths. Note that this is hierarchical: if you pass ['id', 'profile'], all the keys under profile (e.g. profile.firstName) will be ignored as well.\nvalueFns?: {[key: string]: NgxListColumnValueFn} Optional. Use this if you want to mess with the values before searching (e.g. formatting dates to provide something more meaningful). Pass a map from dot-notated key to NgxListColumnValueFn\n\nNgxListFnFactory.comparisonFilter\nCreate a generic filter function of type NgxListFilterFn\nts\nconst list = new NgxList({\n  src$: myDataSrc$,\n  idKey: 'id',\n  filters: {\n    verified: NgxListFnFactory.comparisonFilter({\n      value: (rec) => rec.verified === true\n    })\n  }\n});\nstatic comparisonFilter(options): NgxListFilterFn.\noptions is an object with the following properties:\n\nvalue: string | NgxListColumnValueFn Required. A dot-notated key pointing to a record value, or (recommended) a function that, given a record, returns a value.\ncompare?: NgxListCompare Optional. See NgxListCompare.What comparison operator to use. Default NgxListCompare.eq.\nignoreFilterWhen?: (filterValue: any) => boolean Optional. By default, the filter will be ignored when the filter value is null, undefined or an empty string (''). If this logic doesn't suit pass your own function here.\n\ntype NgxListColumnValueFn\ntype NgxListColumnValueFn = (record: any) => any\nA function that, given a record, returns a value for purposes of sorting, search or filtering. Used by the factory functions.\ntype NgxListFilterFn\ntype NgxListFilterFn = (records: any[], value: any) => any[]\nThe signature of a filter function. You should return a new array of records that match your filter logic. (Don't mutate the array passed in the parameter.)\n\nrecords contains the unfiltered records.\nvalue is the current filter value.\n\ntype NgxListSortFn\nThe signature of a sort function. You should return a separate array sorted by your logic. (Don't mutate the array passed in the parameter.)\ntype NgxListSortFn = (records: any[], key: string) => any[]\n\nrecords are the unsorted records.\nkey is the sort key.\n\nNote that reversing the list, if necessary, happens separately.\nenum NgxListCompare\nUsed by the NgxList.comparisonFilter factory.\nenum NgxListCompare\n\neq Use ===  to compare values.\nneq Use !==  to compare values.\ngte Use >=  to compare values.\ngt Use >  to compare values.\nlte Use   to compare values.\nlt Use  to compare values.\n\ninterface INgxListResult\nThe end product of the list.\ninterface INgxListResult\n\nrecords: any[] The records that belong on the current page.\nrecordCount: number The number of records that match the current filters.\nunfilteredRecordCount: number The total number of records, before filtering.\npageCount: number The number of pages.\npage: number The current page. If there are records, this will be between 0 and pageCount - 1.\nrecordsPerPage: number The value used to page the result.\nsort: {key: string, reversed: boolean} The parameters used to sort the list.\nfilterValues: {[key: string]: any} The filter values used to filter the result.\n\nBootstrap Components API\nNgxListBootstrapModule\nExports\n\nNgxListBoostrapPaginationComponent\nNgxListBoostrapRppComponent\nNgxListBootstrapSortComponent\n\nNgxListBoostrapPaginationComponent\nAn input group with prev/next and first/last buttons, and a dropdown with page numbers.\nselector: 'ngx-list-bootstrap-pagination'\nInputs\n\nlist: NgxList Required. The list.\nselectId: string Required. The id you want to be attached to the page dropdown.\nbuttonClass: string Optional. The Boostrap button class. Default: 'btn btn-outline-secondary'.\nbootstrapSize: 'sm' | 'lg' Optional. The Bootstrap size for the input group. Default: null.\noptions: INgxListBoostrapOptions Optional. Default: null. Pass options for this instance. Will override whatever was provided for NGX_LIST_BOOTSTRAP_OPTIONS in the module or component.\n\nNgxListBoostrapRppComponent\nA dropdown to set the recordsPerPage of a list.\nselector: 'ngx-list-bootstrap-rpp'\nInputs\n\nlist: NgxList Required. The list.\nselectId: string Required. The id you want to be attached to the dropdown.\nbootstrapSize: 'sm' | 'lg' Optional. The Bootstrap size for the select. Default: null.\noptions: INgxListBoostrapOptions Optional. Default: null. Pass options for this instance. Will override whatever was provided for NGX_LIST_BOOTSTRAP_OPTIONS in the module or component. See INgxListBoostrapOptions\n\nNgxListBoostrapSortComponent\nA sort link with indicators, sutable for use in table headers.\nselector: 'ngx-list-bootstrap-sort'\nInputs\n\nlist: NgxList Required. The list.\nkey: string Required. The dot-notated key of the column to sort by.\ndefaultReversed: boolean Optional. Whether the sort should be in reverse order when the key is selected. (Note that selecting the key when it is already selected toggles reversed.  Default: false.\noptions: INgxListBoostrapOptions Optional. Default: null. Pass options for this instance. Will override whatever was provided for NGX_LIST_BOOTSTRAP_OPTIONS in the module or component.\n\ninterface INgxListBoostrapOptions\nOptions to control language, markup, etc. for the bootstrap components. Pass them directly to the components as inputs, or use the NGX_LIST_BOOTSTRAP_OPTIONS token to provide your default options.\n\nfirstPageButtonTitle?: string Optional. Default: 'First Page'. Used for title and aria-label.\nfirstPageButtonHTML?: string Optional. Default: ⇤ ('&larrb;'). The innerHTML of the button.\nlastPageButtonTitle?: string Optional. Default: 'Last Page'. Used for title and aria-label.\nlastPageButtonHTML?: string  Optional. Default: ⇥ ('&rarrb;'). The innerHTML of the button.\nprevPageButtonTitle?: string  Optional. Default: 'Previous Page'. Used for title and aria-label.\nprevPageButtonHTML?: string  Optional. Default: ← ('&larr;'). The innerHTML of the button.\nnextPageButtonTitle?: string Optional. Default: 'Next Page'. Used for title and aria-label.\nnextPageButtonHTML?: string Optional. Default: → ('&rarr;'). The innerHTML of the button.\ncurrentPageTitle?: string Optional. Default: 'Current Page'. Used as the title and aria-label of the pagination dropdown.\nrecordsPerPageOptions?: number[] Optional. The options for the rpp component. Default: [10, 25, 50, 100]\nrecordsPerPageNoPagingLabel?: string Optional. The label for the 'no paging option'. Default: 'No paging'. Note that this will only have effect if you pass 0 as one of the recordsPerPageOptions.\nrecordsPerPageLabel?: string Optional. Default: ' per page'. Inserted after the number in each option of the recordsPerPage dropdown.\nsortLabel?: string Optional. Default: 'Sort List'. Used as the title and aria-label for sort components.\nsortDescHTML?: string Optional. Default:  ↑ ('&uarr;'). The html to be used as the indicator when the sort component is selected and the the list is sorted in descending order (reversed).\nsortDescLabel?: string  Optional. Default:  'sorted in z-a order'. Screen reader text to be used when the sort component is selected and the the list is sorted in descending order (reversed).\nsortAscHTML?: string Optional. Default:  ↓ ('&darr;'). The html to be used as the indicator when the sort component is selected and the the list is sorted in ascending order (not reversed).\nsortAscLabel?: string  Optional. Default:  'sorted in a-z order'. Screen reader text to be used when the sort component is selected and the the list is sorted in ascending order (not reversed).\n\nconst NGX_LIST_BOOTSTRAP_OPTIONS\nconst NGX_LIST_BOOTSTRAP_OPTIONS: InjectionToken\nUse this to set some or all of the component options, either in a module or in a component. You don't have to provide all the options; the options you provide will override the defaults. Example:\n```ts\nimport {\n  NgxListBootstrapModule,\n  NGX_LIST_BOOTSTRAP_OPTIONS,\n  INgxListBoostrapOptions\n} from '@nowzoo/ngx-list';\n// let's  use font awesome icons\nconst myOptions: INgxListBoostrapOptions = {\n  firstPageButtonHTML: '',\n  lastPageButtonHTML: '',\n  prevPageButtonHTML: '',\n  nextPageButtonHTML: '',\n  sortAscHTML: '',\n  sortDescHTML: '',\n};\n@NgModule({\n  imports: [\n    NgxListBootstrapModule,\n  ],\n  providers: [\n    {provide: NGX_LIST_BOOTSTRAP_OPTIONS, useValue: myOptions}\n  ]\n})\nexport class MyModule { }\n```\nNotes\nAbout the Lodash dependency\nYeah, I know I can do everything Lodash does natively. But I can't do it as well or as consistently. So, Lodash.\nThe library uses a minimal set of Lodash functions, which will add about 25kB (7.6kB gzipped) to the payload of your app, if you don't use other Lodash functions elsewhere. If you do use it elsewhere, make sure to use the following tree-shakeable import syntax:\nts\n// good\nimport chunk from 'lodash/chunk';\nimport sortBy from 'lodash/sortBy';\n// bad\n// import * as _ from 'lodash';\n// just as bad...\n// import { chunk, sortBy } from 'lodash';\nTo make this compile for your code, you will probably have to add \"esModuleInterop\": true, \"allowSyntheticDefaultImports\": true  to compilerOptions in tsconfig.json. (You don't need to add it if you are not using Lodash elsewhere, only using the ngx-list library.)\nContributing\nContributions and suggestions are welcome.\nThis library was generated with Angular CLI version 7.2.0.\nThe code for the library itself is in projects/ngx-list/src.\nThe demo app code is in projects/ngx-list-demo/src.\n```bash\nclone the library...\ngit clone https://github.com/nowzoo/ngx-list.git\ninstall deps...\nnpm i\nbuild the library...\nng build ngx-list\nunit tests...\nng test ngx-list\nnote there's also a wallaby.js config at projects/ngx-list/wallaby.js\nserve the demo app ...\nng serve ngx-list-demo\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 NowZoo\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxListBootstrapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxListBootstrapModule\n\n\n\ncluster_NgxListBootstrapModule_declarations\n\n\n\ncluster_NgxListBootstrapModule_exports\n\n\n\n\nNgxListBoostrapPaginationComponent\n\nNgxListBoostrapPaginationComponent\n\n\n\nNgxListBootstrapModule\n\nNgxListBootstrapModule\n\nNgxListBootstrapModule -->\n\nNgxListBoostrapPaginationComponent->NgxListBootstrapModule\n\n\n\n\n\nNgxListBoostrapRppComponent\n\nNgxListBoostrapRppComponent\n\nNgxListBootstrapModule -->\n\nNgxListBoostrapRppComponent->NgxListBootstrapModule\n\n\n\n\n\nNgxListBootstrapSortComponent\n\nNgxListBootstrapSortComponent\n\nNgxListBootstrapModule -->\n\nNgxListBootstrapSortComponent->NgxListBootstrapModule\n\n\n\n\n\nNgxListBoostrapPaginationComponent \n\nNgxListBoostrapPaginationComponent \n\nNgxListBoostrapPaginationComponent  -->\n\nNgxListBootstrapModule->NgxListBoostrapPaginationComponent \n\n\n\n\n\nNgxListBoostrapRppComponent \n\nNgxListBoostrapRppComponent \n\nNgxListBoostrapRppComponent  -->\n\nNgxListBootstrapModule->NgxListBoostrapRppComponent \n\n\n\n\n\nNgxListBootstrapSortComponent \n\nNgxListBootstrapSortComponent \n\nNgxListBootstrapSortComponent  -->\n\nNgxListBootstrapModule->NgxListBootstrapSortComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxListColumnValueFn   (projects/.../shared.ts)\n                        \n                        \n                            NgxListFilterFn   (projects/.../shared.ts)\n                        \n                        \n                            NgxListSortFn   (projects/.../shared.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-list/src/lib/shared.ts\n    \n    \n        \n            \n                \n                    \n                    NgxListColumnValueFn\n                \n            \n            \n                \n                    A function that, given a record, returns a value for purposes of\nsorting, search or filtering. Used by the factory functions.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NgxListFilterFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NgxListSortFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS   (projects/.../options.ts)\n                        \n                        \n                            NGX_LIST_BOOTSTRAP_OPTIONS   (projects/.../options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-list/src/lib/bootstrap/options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_LIST_BOOTSTRAP_DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         INgxListBoostrapOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  firstPageButtonTitle: 'First Page',\n  firstPageButtonHTML: '&larrb;',\n  lastPageButtonTitle: 'Last Page',\n  lastPageButtonHTML: '&rarrb;',\n  prevPageButtonTitle: 'Previous Page',\n  prevPageButtonHTML: '&larr;',\n  nextPageButtonTitle: 'Next Page',\n  nextPageButtonHTML: '&rarr;',\n  currentPageTitle: 'Current Page',\n  recordsPerPageOptions: [10, 25, 50, 100],\n  recordsPerPageNoPagingLabel: 'No paging',\n  recordsPerPageLabel: ' per page',\n  sortLabel: 'Sort List',\n  sortAscHTML: '&darr;',\n  sortAscLabel: 'sorted in a-z order',\n  sortDescHTML: '&uarr;',\n  sortDescLabel: 'sorted in z-a order',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_LIST_BOOTSTRAP_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken(\n    'labels znd html for the list components'\n  )\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
